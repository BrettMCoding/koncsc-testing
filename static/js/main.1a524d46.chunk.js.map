{"version":3,"sources":["site_layout/user_management/services/AuthenticationService.js","site_layout/user_management/components/LoginComponent.js","site_layout/user_management/components/LogoutComponent.js","site_layout/user_management/components/NavCharacterList.js","site_layout/user_management/components/ConfirmationModal.js","site_layout/header/Navigation.js","site_layout/header/Header.js","site_layout/character_info/CharacterInfoInput.js","site_layout/character_info/CharacterInfo.js","site_layout/resources/Resource.js","site_layout/resources/Resources.js","site_layout/skill_trees/Skill.js","site_layout/skill_trees/SkillTree.js","site_layout/user_management/components/RegisterNewUserComponent.js","site_layout/user_management/components/NewPasswordComponent.js","site_layout/user_management/components/ForgotPasswordComponent.js","App.js","index.js","react-alert-template-basic.js"],"names":["username","password","axios","get","process","headers","authorization","this","createBasicAuthToken","window","btoa","sessionStorage","setItem","console","log","getItem","setupAxiosInterceptors","removeItem","user","token","interceptors","request","use","config","isUserLoggedIn","LoginComponent","props","APP_URL","useState","email","updateEmail","updatePassword","hasLoginFailed","setLoginFailed","showSuccessMessage","setSuccessMessage","alert","useAlert","className","type","name","value","onChange","event","target","onClick","AuthenticationService","executeBasicAuthenticationService","then","registerSuccessfulLogin","show","timeout","toggleModal","getUserLoggedInProp","loadCharacterList","catch","href","LogoutComponent","logout","NavCharacterList","characterList","map","character","id","setCurrentConfirmationModal","handleCharacter","message","characterName","level","race","ConfirmationModal","Modal","isOpen","confirmationModalIsOpen","toggle","toggleConfirmationModalIsOpen","ModalBody","ModalFooter","Button","color","Navigation","navbarIsOpen","setNavbarIsOpen","loginModalIsOpen","setLoginModalIsOpen","skillResetModalIsOpen","setSkillResetModalIsOpen","setConfirmationModalIsOpen","toggleLoginModal","toggleSkillResetModalIsOpen","handleMethod","setHandleMethod","setMessage","setId","setUserLoggedIn","boolean","hideWhenNotLoggedInWrap","content","items","from","opacity","enter","leave","transitionProps","div","style","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","lockChanges","locked","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","saveCharacter","loadCharacter","deleteCharacter","ModalHeader","resetSkills","Header","Container","React","Component","CharacterInfoInput","displayName","placeholder","maxLength","infoValue","disabled","e","characterInfoChange","infoName","CharacterInfo","Row","Col","country","player","calculateSkillPointsRemaining","savedXp","Resource","removeResource","addResource","resourceName","resource","max","skillCss","cost","fillBarAnim","useSpring","width","ResourceBar","Filler","undefined","isLoaded","Resources","MAGIC_POINT_COST","resources","magicPoints","PRODUCTION_POINT_COST","productionPoints","CRAFT_POINT_COST","craftPoints","Skill","playerHasSkill","playerSkills","compareIds","some","skill","checkedStyle","checked","playerCheckedASkillBox","tier","SkillTree","setIsOpen","numOfSkillsInTree","skills","length","key","icon","faChevronUp","faChevronDown","treeName","filter","tree","toLowerCase","RegisterNewUserComponent","hasRegisterFailed","setRegisterFailed","errorMessage","setErrorMessage","useEffect","document","title","persist","post","API_URL","res","err","response","data","requestRegisterNewUser","NewPasswordComponent","password2","updatePassword2","match","params","requestNewPassword","ForgotPasswordComponent","App","state","loadingSkills","combat","general","production","roleplaying","aegis","battle","nature","necromancy","compulsion","restoration","enchantment","sortSkillsByTree","setState","prevState","saveLocalCharacter","values","localStorage","JSON","stringify","loadLocalCharacter","localStorageCharacter","parse","method","url","updatedInfo","calculateBaseSkillPoints","newSkillPointsRemaining","calculateSpentSkillPoints","spent","playerResources","checkRequirements","requiredSkill","requires","pSkills","pSkill","includes","checkedSkill","canPlayerGetThisRoleplayingSkill","addSkill","skillIsRequired","removeSkill","playerRPSkills","tierThreePlayerRPSkills","requirementSkillString","pSkill2","arrSkill","exact","path","staate","ockChanges","component","withAlert","options","position","positions","TOP_CENTER","offset","transition","transitions","FADE","render","template","AlertTemplate","getElementById","ex","require","BaseIcon","_ref","_ref$pushRight","pushRight","children","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","d","points","ErrorIcon","CloseIcon","_extends","Object","assign","i","arguments","source","prototype","hasOwnProperty","call","alertStyle","borderStyle","borderColor","backgroundColor","padding","borderRadius","display","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","module","exports","close","flex","whiteSpace","textAlign"],"mappings":"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","file":"static/js/main.1a524d46.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_DOMAIN\r\n\r\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n\r\nclass AuthenticationService {\r\n\r\n    executeBasicAuthenticationService(username, password) {\r\n        \r\n        return axios.get(`${API_URL}/auth`,\r\n            { headers: { authorization: this.createBasicAuthToken(username, password) } })\r\n    }\r\n\r\n    createBasicAuthToken(username, password) {\r\n        let basicAuth = 'Basic ' + window.btoa(username + \":\" + password)\r\n\r\n        return basicAuth\r\n    }\r\n\r\n    registerSuccessfulLogin(username, password) {\r\n\r\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        console.log(\"you are now logged in as: \")\r\n        console.log(sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME))\r\n        console.log(\"\\n\\n\\n\\n\\n\")\r\n        sessionStorage.setItem(\"USER_TOKEN\", this.createBasicAuthToken(username, password))\r\n        this.setupAxiosInterceptors(sessionStorage.getItem(\"USER_TOKEN\"))\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return false\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()\r\n","import React, { useState } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction LoginComponent(props) {\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [password, updatePassword] = useState('');\r\n    const [hasLoginFailed, setLoginFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const alert = useAlert();\r\n\r\n    const loginClicked = () => {\r\n        ///console.log(\"\\n\\n\\n\\n\\n\")\r\n        //console.log(\"attempting to login\")\r\n        //console.log(\"\\n\\n\\n\\n\\n\")\r\n\r\n        AuthenticationService\r\n            .executeBasicAuthenticationService(email, password)\r\n            .then(() => {\r\n                AuthenticationService.registerSuccessfulLogin(email, password)\r\n                alert.show(\"Login Successful\", {type:'success', timeout: 5000})\r\n                // this.props.history.push(`/courses`)\r\n\r\n                props.toggleModal();\r\n                props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn());\r\n                props.loadCharacterList();\r\n\r\n            }).catch(() => {\r\n                setSuccessMessage(false);\r\n                setLoginFailed(true);\r\n                //console.log(\"Login Failed. Likely invalid credentials (401)\")\r\n                //console.log(\"\\n\\n\\n\\n\\n\")\r\n            })\r\n    }\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n\r\n    return (\r\n        <div>\r\n        {!props.isUserLoggedIn &&\r\n                <div className=\"container form-group d-flex flex-column\">\r\n                    <h1 className=\"text-center\">Login</h1>\r\n\r\n                    {hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Login Successful</div>}\r\n\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={loginClicked}>Login</button>\r\n                    <div>\r\n                        <a href={APP_URL + '/#/register'} className=\"btn btn-outline-secondary text-center\">Create account</a>\r\n                        <a href={APP_URL + '/#/forgot'} className=\"btn btn-outline-secondary text-center\">Forgot your password?</a>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComponent","import React from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService'\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function LogoutComponent(props) {\r\n    const alert = useAlert();\r\n\r\n    const logout = () => {\r\n        AuthenticationService.logout()\r\n        alert.show('Logout Successful', {type:'success', timeout:5000})\r\n        props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <button className=\"btn btn-danger\" onClick={logout}>Logout</button> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NavCharacterList(props) {\r\n    // return a div map of all users characters by id\r\n    // on click, handleMethod, message, and characterId is passed to our confirmationModal\r\n    // to have the user confirm before losing/overwriting data\r\n    \r\n    return props.characterList.map((character) => {\r\n            \r\n            return <div className=\"character-list-slot btn-success btn-sm\"\r\n\r\n            id={character.id} \r\n\r\n            onClick={() => \r\n                {props.setCurrentConfirmationModal(\r\n                    // pass handle method (save/load/delete)\r\n                    props.handleCharacter, \r\n                    // pass related save/load/delete message with character name\r\n                    (props.message + character.characterName + \")\"), \r\n                    // pass character id if user confirms choice\r\n                    character.id)}}>\r\n\r\n                    {/* displayed as \"Charactername. level race */}\r\n                    {character.characterName}.&nbsp;<br />Level&nbsp;{character.level}&nbsp;{character.race}\r\n                \r\n            </div>\r\n        });\r\n}\r\n","import React from 'react'\r\nimport { Modal, ModalBody, ModalFooter, Button } from 'reactstrap'\r\n\r\nexport default function ConfirmationModal(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.confirmationModalIsOpen} toggle={props.toggleConfirmationModalIsOpen}>\r\n                <ModalBody>\r\n                    {props.message}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={props.toggleConfirmationModalIsOpen}>Cancel</Button>\r\n                    <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.handleCharacter(props.id, props.alert);props.toggleConfirmationModalIsOpen()}}>Confirm</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoginComponent from '../user_management/components/LoginComponent';\r\nimport LogoutComponent from '../user_management/components/LogoutComponent';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n    // NavbarText\r\n} from 'reactstrap';\r\nimport { animated } from 'react-spring';\r\nimport { Transition } from 'react-spring/renderprops';\r\nimport AuthenticationService from '../user_management/services/AuthenticationService';\r\nimport NavCharacterList from '../user_management/components/NavCharacterList';\r\nimport ConfirmationModal from '../user_management/components/ConfirmationModal';\r\nimport { useAlert } from 'react-alert';\r\n\r\n// Navigation is the house for our character / user management\r\n\r\nfunction Navigation(props) {\r\n  const [navbarIsOpen, setNavbarIsOpen] = useState(false);\r\n  const [loginModalIsOpen, setLoginModalIsOpen] = useState(false);\r\n  const [skillResetModalIsOpen, setSkillResetModalIsOpen] = useState(false);\r\n  const [confirmationModalIsOpen, setConfirmationModalIsOpen] = useState(false);\r\n\r\n  // alert popup system\r\n  const alert = useAlert();\r\n\r\n  // log state test button\r\n  // const logs = () => {console.log(props.staate)}\r\n\r\n  // navbar collapse/expand\r\n  const toggleNavbar = () => setNavbarIsOpen(!navbarIsOpen);\r\n\r\n  // login modal\r\n  const toggleLoginModal = () => setLoginModalIsOpen(isUserLoggedIn ? false : !loginModalIsOpen);\r\n\r\n  // skill reset modal\r\n  const toggleSkillResetModalIsOpen = () => {\r\n    setSkillResetModalIsOpen(!skillResetModalIsOpen)};\r\n\r\n  // confirmation modal\r\n  // the confirmationModal is setup to handle Save/Load/Delete based on the user \r\n  // clicking a character in one of our NavCharacterLists\r\n  const toggleConfirmationModalIsOpen = () => {\r\n    setConfirmationModalIsOpen(!confirmationModalIsOpen)};\r\n    \r\n    // handleMethod is Save/Load/Delete character, set by whichever list option is clicked\r\n    const [handleMethod, setHandleMethod] = useState(\"\");\r\n    // message is added to confirmationModal as \"are you sure you want to save/load/delete?\" similarly to the handleMethod\r\n    const [message, setMessage] = useState(\"\");\r\n    // id is added to confirmationModal, \r\n    const [id, setId] = useState(null);\r\n\r\n  // when the user clicks to save/load/delete a character,\r\n  // a confirmationModal is setup with the following args\r\n  // and then displayed to make sure the user meant to take that action \r\n  const setCurrentConfirmationModal = (handleMethod, message, id) => {\r\n    setHandleMethod(() => handleMethod);\r\n    setMessage(message);\r\n    setId(id);\r\n    toggleConfirmationModalIsOpen();\r\n  }\r\n\r\n  // local state isUserLoggedIn is a little clunky, but updating local State makes rendering changes\r\n  // to the buttons and lists easier\r\n  const [isUserLoggedIn, setUserLoggedIn] = useState(AuthenticationService.isUserLoggedIn());\r\n  const getUserLoggedInProp = (boolean) => {\r\n    setUserLoggedIn(boolean);\r\n  }\r\n\r\n  // using react-spring render-props API to make an animation transition\r\n  // this will hide the character list features when user is not logged in\r\n  const hideWhenNotLoggedInWrap = (content) => {\r\n      // Transition object controls opacity animation.\r\n      // Used to show/hide content on login/logout\r\n    return <div className=\"align-items-center d-flex\"><Transition\r\n        items={isUserLoggedIn}\r\n        from={{ opacity: 0 }}\r\n        enter={{ opacity: 1 }}\r\n        leave={{ opacity: 0 }}>\r\n        {isUserLoggedIn => isUserLoggedIn && ((transitionProps) => <animated.div style={transitionProps}> \r\n            \r\n            {/* below content arg is whatever element we want to show when user logs in */}\r\n            {content}\r\n\r\n    </animated.div>)}</Transition></div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Navbar className=\"navbar navbar-dark\" light expand=\"md\">\r\n        <NavbarToggler onClick={toggleNavbar} />\r\n\r\n        <Collapse isOpen={navbarIsOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n              <NavLink href=\"http://kingdomsofnovitas.net/\">kingdomsofnovitas.net</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n              <NavLink href=\"https://www.facebook.com/groups/KingdomsOfNovitas/\">Facebook</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={toggleSkillResetModalIsOpen} >Reset Skills</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={props.lockChanges} >{props.locked ? \"Unl\" : \"L\"}ock Editing</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n                { isUserLoggedIn && <LogoutComponent getUserLoggedInProp={getUserLoggedInProp} /> }\r\n\r\n                { !isUserLoggedIn &&<Button color=\"success\" onClick={toggleLoginModal}>Login</Button>}\r\n            </NavItem>\r\n\r\n            {hideWhenNotLoggedInWrap(\r\n                <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Save\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.saveCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to save this character? (Character in slot: \"}/>\r\n                    <div className=\"character-list-slot btn-success btn-sm\" onClick={()=>{setCurrentConfirmationModal(props.saveCharacter, \"Are you sure you want to save a new character?\")}}>New Character</div>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Load\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.loadCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                        Delete\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                        <NavCharacterList characterList={props.characterList} handleCharacter={props.deleteCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                    </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n          </Nav>\r\n        </Collapse>\r\n                \r\n                {/* // login modal */}\r\n                <Modal isOpen={loginModalIsOpen} toggle={toggleLoginModal}>\r\n                    <ModalHeader toggle={toggleLoginModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <LoginComponent isUserLoggedIn={isUserLoggedIn} getUserLoggedInProp={getUserLoggedInProp} toggleModal={toggleLoginModal} loadCharacterList={props.loadCharacterList}/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={toggleLoginModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* confirm skill reset modal */}\r\n                <Modal isOpen={skillResetModalIsOpen} toggle={toggleSkillResetModalIsOpen}>\r\n                    <ModalBody>\r\n                        <div>Are you sure you want to reset your skills? (Unsaved changes will be lost)</div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={props.toggleConfirmationModalIsOpen}>Cancel</Button>\r\n                        <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.resetSkills(); toggleSkillResetModalIsOpen();}}>Reset Skills</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* confirm save/load/delete modal */}\r\n                <ConfirmationModal confirmationModalIsOpen={confirmationModalIsOpen}\r\n                toggleConfirmationModalIsOpen={toggleConfirmationModalIsOpen}\r\n                handleCharacter={handleMethod} message={message} id={id} alert={alert} />\r\n               \r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport {Container} from 'reactstrap';\r\n\r\n// Header contains our title and the Navigation bar\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <div className=\"header-title\">\r\n                        <h1>KINGDOMS OF NOVITAS</h1>\r\n                        <h2>Online Character Sheet | Skill Calculator</h2>\r\n                    </div>\r\n                    <Navigation \r\n                        lockChanges={this.props.lockChanges} \r\n                        resetSkills={this.props.resetSkills}\r\n                        locked={this.props.locked} \r\n                        saveCharacter={this.props.saveCharacter} \r\n                        loadCharacter={this.props.loadCharacter} \r\n                        deleteCharacter={this.props.deleteCharacter} \r\n                        characterList={this.props.characterList} \r\n                        loadCharacterList={this.props.loadCharacterList}\r\n                        // passed to button for testing\r\n                        // staate={this.props.staate}\r\n                        />\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Nav.propTypes = {\r\n//     lockChanges: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction CharacterInfoInput(props) {\r\n    // the display for every character info item except skill points remaining\r\n    return (\r\n        <div>\r\n            {props.displayName}:<br />&nbsp;\r\n        <input type=\"text\" \r\n            placeholder={props.placeholder} \r\n            maxLength={props.maxLength} \r\n            value={props.infoValue} \r\n            disabled={props.lockChanges} \r\n            onChange = {e => {\r\n                props.characterInfoChange(props.infoName, e.target.value)}}/>\r\n        </div>\r\n);\r\n\r\n}\r\n\r\nexport default CharacterInfoInput;","import React, {Component} from 'react';\r\nimport { Container, Row, Col, } from 'reactstrap';\r\nimport CharacterInfoInput from './CharacterInfoInput';\r\n\r\nexport class CharacterInfo extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"characterinfo-box\">\r\n                                <div className=\"characterinfo-content\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Character Name\"\r\n                                                infoName=\"characterName\" \r\n                                                infoValue={this.props.characterName}\r\n                                                maxLength=\"33\"\r\n                                                placeholder=\"Enter a Character Name\"\r\n                                                characterInfoChange={this.props.characterInfoChange}\r\n                                                lockChanges={this.props.lockChanges}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Race\"\r\n                                                infoName=\"race\" \r\n                                                infoValue={this.props.race}\r\n                                                maxLength=\"33\"\r\n                                                placeholder=\"Enter a Race\"\r\n                                                characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Country\"\r\n                                            infoName=\"country\" \r\n                                            infoValue={this.props.country}\r\n                                            maxLength=\"33\"\r\n                                            placeholder=\"Enter a Country\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Player\"\r\n                                            infoName=\"player\" \r\n                                            infoValue={this.props.player}\r\n                                            maxLength=\"33\"\r\n                                            placeholder=\"Enter a player name\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Level\"\r\n                                            infoName=\"level\" \r\n                                            infoValue={this.props.level}\r\n                                            maxLength=\"3\"\r\n                                            placeholder=\"1\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"skillpointsremaining\">Skill Points Remaining: <div className=\"mock-input\">&nbsp;&nbsp;{this.props.calculateSkillPointsRemaining()}</div></div>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Saved XP\"\r\n                                                infoName=\"savedXp\" \r\n                                                infoValue={this.props.savedXp}\r\n                                                maxLength=\"3\"\r\n                                                placeholder=\"0\"\r\n                                                characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterInfo","import React from 'react';\r\nimport {Row} from 'reactstrap';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nexport default function Resource(props) {\r\n    // simplify prop drilling\r\n    const { removeResource, addResource, lockChanges } = props.props;\r\n    const { resourceName, resource, max, skillCss, cost, displayName } = props;\r\n    \r\n    // Resource bar step\r\n    const step = () => {\r\n        if (max === 20) {\r\n            return 5;\r\n        }\r\n        return 10;\r\n    }\r\n\r\n    // calculated width % string, send to Filler\r\n    const fillBarAnim = useSpring({ width: resource ? resource * step() + '%' : 0 + '%' })\r\n\r\n    // Resource ProgressBar\r\n    const ResourceBar = () => {\r\n        return (\r\n            <div className=\"progress-bar\">\r\n                <div className=\"bar-text\">{displayName}: {resource} / {max}</div>\r\n                <Filler />\r\n            </div>\r\n            )\r\n    }\r\n      \r\n    // ANIMATION CALL ON CLICKING TOO FAST LEAKING MEMORY?\r\n    const Filler = () => {\r\n        return <animated.div className={\"filler \" + skillCss} style={fillBarAnim} />\r\n    }\r\n\r\n    const isLoaded = (resource) => {\r\n        // if the props aren't loaded and they come back as undefined,\r\n        // render the component as \"Loading...\"\r\n        return (resource === undefined) ? <div>Loading...</div> : \r\n\r\n            <Row className=\"d-flex flex-nowrap justify-content-center rscrow\">\r\n\r\n            <button type=\"button\" className=\"btn btn-danger btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                removeResource(resourceName)\r\n            }}>\r\n\r\n                -\r\n\r\n            </button>\r\n            \r\n            <ResourceBar />\r\n\r\n            <button type=\"button\" className=\"btn btn-success btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                addResource(resourceName, cost, max)\r\n            }} >\r\n                \r\n                +\r\n                \r\n            </button>\r\n\r\n            <div className=\"resource-cost\">{cost}</div>\r\n\r\n            </Row>\r\n\r\n\r\n            };\r\n\r\n    return isLoaded(resource);\r\n}\r\n","import React from 'react'\r\nimport Resource from './Resource';\r\n// import Skilltree from '../skill_trees/SkillTree'\r\n// import PropTypes from 'prop-types';\r\n\r\nexport default function Resources(props) {\r\n    // props.resources.find(x => x.id === 160) = production\r\n    // props.resources.find(x => x.id === 161) = craft\r\n    // props.resources.find(x => x.id === 162) = magic power\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"resourcebox\">\r\n\r\n\r\n                {/* With resources, the cost is set locally and not in the database, unlike skills. */}\r\n\r\n                    <h3 className=\"resources\">Resources</h3>\r\n                    {/* Magic Power */}\r\n                    <Resource props={props} \r\n                                displayName={\"Magic Power\"} \r\n                                cost={props.MAGIC_POINT_COST} \r\n                                max={20}\r\n                                \r\n                                resourceName={\"magicPoints\"}\r\n\r\n                                resource={props.resources.magicPoints}\r\n                                skillCss={\"magic\"}\r\n                    />\r\n                    \r\n                    {/* Production */}\r\n                    <Resource props={props} \r\n                                displayName={\"Production\"} \r\n                                cost={props.PRODUCTION_POINT_COST} \r\n                                max={10} \r\n\r\n                                resourceName={\"productionPoints\"}\r\n\r\n                                resource={props.resources.productionPoints}skillCss={\"production\"}\r\n                    />\r\n\r\n                    {/* Craft */}\r\n                    <Resource props={props}\r\n                                displayName={\"Craft\"} \r\n                                cost={props.CRAFT_POINT_COST} \r\n                                max={10} \r\n\r\n                                resourceName={\"craftPoints\"}\r\n\r\n                                resource={props.resources.craftPoints}\r\n                                skillCss={\"craft\"}\r\n                    />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Skill(props){\r\n\r\n    // local management. re-enable if skill checking is bugged,\r\n    // as well as lines 44 & 47\r\n    //const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const playerHasSkill = (playerSkills) => { \r\n        // if state.playerskills are undefined, return false\r\n        return (playerSkills === undefined) ?\r\n            false : compareIds(playerSkills)\r\n    }\r\n    \r\n    // search playerskills for a match\r\n    const compareIds = (playerSkills) => {\r\n\r\n        return playerSkills.some(skill => skill.id === props.skill.id);\r\n\r\n    }\r\n\r\n   const addSpaces = (string) => {\r\n           if (props.skill.tier === 2) {\r\n                return '  ';\r\n           } else if (props.skill.tier === 3) {\r\n                return '    ';\r\n           } else if (props.skill.tier === 4) {\r\n                return '      ';\r\n           } else if (props.skill.tier === 5) {\r\n                return '        ';\r\n           }\r\n   }\r\n\r\n   const checkedStyle = playerHasSkill(props.playerSkills) ? \" checked\" : \"\";\r\n\r\n    return (\r\n        <div className={\"skill row d-flex flex-nowrap\" + checkedStyle}>\r\n            <div className={\"skillBody col pl-1\" + checkedStyle}>\r\n                <p>\r\n                <input disabled={props.lockChanges} type=\"checkbox\" checked={playerHasSkill(props.playerSkills)} \r\n                \r\n                    onChange={e => {\r\n\r\n                        //(setIsChecked(\r\n                            props.playerCheckedASkillBox(props.skill, e.target.checked)\r\n                        ;\r\n                        //);\r\n                }}/> \r\n                    {' '} {addSpaces(props.skill.name)}\r\n                    {props.skill.name}\r\n                </p>\r\n                </div>\r\n            <div className=\"skillCost d-inline-flex flex-nowrap pr-1\">{props.skill.cost}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skill\r\n","import React, { Component, useState } from 'react'\r\nimport { Collapse, Button } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp, faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport Skill from './Skill';\r\n\r\nexport default function SkillTree(props){\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const numOfSkillsInTree = props.skills.length;\r\n\r\n    // search playerskills for matching tree to this props.tree(toLowerCase, since it's used for display without it)\r\n    const numOfPlayerSkillsInTree = () => {\r\n        let playerTreeSkills = props.playerSkills.filter(skill => skill.tree === props.treeName.toLowerCase()).length\r\n        return playerTreeSkills\r\n    }\r\n\r\n    const skills = props.skills.map((skill) => (\r\n            <Skill key={skill.id} skill={skill} playerCheckedASkillBox={props.playerCheckedASkillBox} lockChanges={props.lockChanges} playerSkills={props.playerSkills} />\r\n        ))\r\n\r\n    return (\r\n        <div>\r\n                <h3><button className=\"btn-sm btn-dark float-left\" onClick={toggle}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button>\r\n\r\n                {props.treeName} {numOfPlayerSkillsInTree()} / {numOfSkillsInTree}\r\n\r\n                <button className=\"btn-sm btn-dark float-right\" onClick={toggle}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button></h3>\r\n            <Collapse isOpen={isOpen}>\r\n                {skills}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function RegisterNewUserComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Register Account\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        let url = API_URL + '/register'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n                <h1 className=\"text-center\">Register New User</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Registration Successful. A confirmation email has been sent to the provided email address. Please click the activation link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Register</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function NewPasswordComponent(props) {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [password, updatePassword] = useState('');\r\n    const [password2, updatePassword2] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Enter New Password\"\r\n     }, []);\r\n\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n    const eventUpdatePassword2 = (event) => updatePassword2(event.target.value);\r\n\r\n    console.log(props)\r\n\r\n    const requestNewPassword = (password, password2) => {\r\n        let url = API_URL + '/confirm?token=';\r\n        return axios.post(url + props.match.params.token,\r\n            { \"p1\": password,\r\n                \"p2\": password2 })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Enter New Password</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Password accepted. You may now log in normally. Thank you.</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    Confirm Password: <input type=\"password\" className=\"form-control\" name=\"password2\" value={password2} onChange={eventUpdatePassword2}/>\r\n\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestNewPassword(password, password2);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Forgot Password\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        let url = API_URL + '/forgot'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Forgot Password?</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">An email has been sent to the provided email address. Please click the forgot password link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","// TODO: add CHECK YOUR SPAM WARNING to backend email confirmation\r\n// TODO: Rare language approval (v1 vs v2 implementation?)\r\n// TODO: Free appropriate racial language\r\n\r\n// TODO: lock level to >0 <999\r\n// TODO: resources are not calculating cost from state values\r\n// TODO: continue comment sweep\r\n// TODO: continue refactor sweep\r\n\r\n//  OPTIONAL\r\n    // TODO: pull skill descriptions?\r\n    // TODO: printable?\r\n    // TODO: admin mode?\r\n    // TODO: hide unused skills?\r\n    // TODO: further character info redisgn?\r\n\r\nimport React from 'react';\r\nimport { Container, Row, Col, } from 'reactstrap';\r\nimport Header from './site_layout/header/Header';\r\nimport CharacterInfo from './site_layout/character_info/CharacterInfo';\r\nimport Resources from './site_layout/resources/Resources';\r\nimport SkillTree from './site_layout/skill_trees/SkillTree';\r\nimport { HashRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport UserLoginLogoutComponent from './site_layout/user_management/components/UserLoginLogoutComponent';\r\nimport RegisterNewUserComponent from './site_layout/user_management/components/RegisterNewUserComponent';\r\nimport NewPasswordComponent from './site_layout/user_management/components/NewPasswordComponent';\r\nimport ForgotPasswordComponent from './site_layout/user_management/components/ForgotPasswordComponent';\r\nimport AuthenticationService from './site_layout/user_management/services/AuthenticationService';\r\n\r\nimport { withAlert } from 'react-alert';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        // TOP LEVEL REACT STATE:::\r\n        \r\n        // All of our character information is stored in state. It is overwritten with a localstorage character (if any),\r\n        // or a Database character when selected by the logged in user\r\n        \r\n        // All of a logged in user's characters are stored in characterList\r\n        \r\n        // All of our skills are loaded into skilltree arrays, and player skills are loaded into the playerHasSkill array\r\n        \r\n        // The switch for enabling/disabling skills is also stored here\r\n\r\n        // character info\r\n        id: \"\",\r\n        characterName: \"\",\r\n        country: \"\",\r\n        player: \"\",\r\n        race: \"\",\r\n        level: 1,\r\n        savedXp: 0,\r\n        playerHasSkill: [],\r\n\r\n        // list of characters owned by logged in user\r\n        characterList: [],\r\n\r\n        \r\n        // RESOURCES\r\n        resources: {\r\n            magicPoints: 0,\r\n            craftPoints: 0,\r\n            productionPoints: 0,\r\n        },\r\n\r\n        // Cost is tracked in state instead of database using these constant values\r\n            MAGIC_POINT_COST: 1,\r\n            CRAFT_POINT_COST: 2,\r\n            PRODUCTION_POINT_COST: 1,\r\n        \r\n        // LOCK BUTTONS TO PREVENT EDITING\r\n        locked: false,\r\n\r\n        // SKILLS BEING LOADED?\r\n        loadingSkills: false,\r\n\r\n        // SKILL TREES\r\n        combat: [],\r\n        general: [],\r\n        production: [],\r\n        roleplaying: [],\r\n        aegis: [],\r\n        battle: [],\r\n        nature: [],\r\n        necromancy: [],\r\n        compulsion: [],\r\n        restoration: [],\r\n        enchantment: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Kingdoms of Novitas | Character Sheet\"\r\n        // componentDidMount is called when react successfully inserts a component into the DOM. \r\n        // We then check if the user is logged in to load their characters\r\n        // Then we load all of our skills from the database\r\n        // Then we load whatever the user had in localStorage, if anything\r\n\r\n        if (AuthenticationService.isUserLoggedIn()) {\r\n            AuthenticationService.setupAxiosInterceptors(sessionStorage.getItem(\"USER_TOKEN\"));\r\n            this.loadCharacterList();\r\n        };\r\n\r\n        // loading skills flag for 'loading...' div\r\n        this.setState({loadingSkills: true});\r\n\r\n        let skills = [];\r\n        axios.get(process.env.REACT_APP_API_DOMAIN + '/skills')\r\n            .then(res => {\r\n                // an array of skill objects was obtained from the database\r\n                skills = [...res.data];\r\n                // sort them\r\n                this.sortSkillsByTree(skills);\r\n                this.setState({loadingSkills: false});\r\n                });\r\n\r\n        if (localStorage.getItem(\"character\") !== null){\r\n            this.loadLocalCharacter()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Called when state or props update, so we use it to update the localStorage character\r\n        this.saveLocalCharacter()\r\n    }\r\n\r\n    sortSkillsByTree = (skills) => {\r\n        // Called in componentDidUpdate. Called when we get skills from database\r\n\r\n        // keys in state currently empty arrays\r\n        for (let key in this.state) {\r\n            for (let skill in skills) {\r\n                // if state key is the same as skill tree\r\n                if (key === skills[skill].tree) {\r\n                    // state is immutable, and batches updates. We spread the previous state (prevState) and then add the skill so that the correct previous value + new value is added\r\n                    this.setState(prevState => ({\r\n                        [key]: [...prevState[key], skills[skill]]\r\n                    }));\r\n                }\r\n            }\r\n        } \r\n    };\r\n\r\n    saveLocalCharacter = () => {\r\n        // called by componentDidUpdate\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill\r\n        }\r\n\r\n        localStorage.setItem(\"character\", JSON.stringify(character))\r\n    }\r\n\r\n    loadLocalCharacter = () => {\r\n        // CALLED BY: componentDidMount\r\n        // load character from localStorage, if any\r\n\r\n        var localStorageCharacter = JSON.parse(localStorage.getItem(\"character\"));\r\n        \r\n        this.setState(prevState =>({\r\n            ...prevState,\r\n            \r\n            characterName: localStorageCharacter.characterName,\r\n            player: localStorageCharacter.player,\r\n            race: localStorageCharacter.race,\r\n            country: localStorageCharacter.country,\r\n            level: localStorageCharacter.level,\r\n            savedXp: localStorageCharacter.savedXp,\r\n            magicPoints: localStorageCharacter.magicPoints,\r\n            craftPoints: localStorageCharacter.craftPoints,\r\n            productionPoints: localStorageCharacter.productionPoints,\r\n            playerHasSkill: localStorageCharacter.skills\r\n        }))\r\n    }\r\n    \r\n    loadCharacterList = () => {\r\n        // CALLED BY: componentDidMount, saveCharacter, loadCharacter,\r\n                    // loginClicked (Header -> Navigation -> LoginComponent)\r\n        // load all characters owned by current user\r\n        \r\n        let url = process.env.REACT_APP_API_DOMAIN + '/characters'\r\n        return axios({\r\n            method: 'get',\r\n            url: url})\r\n            .then((res) => {\r\n                this.setState(() =>({\r\n                    characterList: [...res.data]\r\n                }))\r\n                \r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n        }\r\n    \r\n        \r\n        saveCharacter = (id, alert) => {\r\n            // CALLED BY: Navigation(onClick(new Character)) (Header -> Navigation) \r\n            // CALLED BY: ConfirmationModal(onClick) (Header -> Navigation -> ConfirmationModal)\r\n            // Save character to database. If an ID is provided, it will overwrite the database character with the matching ID\r\n            // Ownership of the character is checked on the backend, so the user cannot overwrite a character that does not\r\n            // belong to them\r\n        \r\n            // alert is passed in, because App.js this.props.alert is not accessible.\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            id: id,\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill\r\n        }\r\n\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: character })\r\n            .then((res) => {\r\n                \r\n                // reload the character list on success\r\n                this.loadCharacterList();\r\n\r\n                // alert arg use\r\n                alert.show(\"Character Saved\", {timeout: 5000, type: 'success'})\r\n            }).catch((err) => {\r\n\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n        \r\n    }\r\n    \r\n    loadCharacter = (id, alert) => {\r\n        // load a user selected character from the database\r\n        \r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'get',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // react doesnt like nested state, so we need to make a nest for our resources first\r\n                // due to the way we stored them in this.state\r\n                var resources = {magicPoints: res.data.magicPoints,\r\n                                    productionPoints: res.data.productionPoints,\r\n                                craftPoints: res.data.craftPoints}\r\n\r\n                this.setState(prevState =>({\r\n                    ...prevState,\r\n\r\n                    id : res.data.id,\r\n                    characterName: res.data.characterName,\r\n                    race: res.data.race,\r\n                    player: res.data.player,\r\n                    country: res.data.country,\r\n                    level: res.data.level,\r\n                    savedXp: res.data.savedXp,\r\n\r\n                    // resource nest made above\r\n                    resources: resources,\r\n\r\n                    // list of user skills\r\n                    playerHasSkill: res.data.skills\r\n                }))\r\n                alert.show(\"Character Loaded\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    deleteCharacter = (id, alert) => {\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'delete',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // console.log(res.data)\r\n                this.loadCharacterList()\r\n                alert.show(\"Character Deleted\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(err.response.data, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    resetSkills = () => {\r\n        let resetResources = {\r\n            magicPoints: 0,\r\n            craftPoints: 0,\r\n            productionPoints: 0 }\r\n            \r\n        this.setState({ playerHasSkill: [],\r\n                        resources: resetResources\r\n                    });\r\n        this.calculateSkillPointsRemaining();\r\n        this.props.alert.show(\"Skills Reset\", {timeout: 5000, type: 'success'})\r\n    }\r\n\r\n    characterInfoChange = (infoName, updatedInfo) => {\r\n        // CALLED BY:\r\n        // CharacterInfo -> CharacterInfoInput(onChange)\r\n        // if the infoName is \"level\", we need to update players skill points remaining.\r\n        this.setState({[infoName]: updatedInfo}, function() {\r\n            this.calculateSkillPointsRemaining();\r\n        });  \r\n    }\r\n    \r\n    calculateBaseSkillPoints = () => { \r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // a level 1 character has 4 skill points. Every level after that is +2\r\n\r\n        return this.state.level === 1 ? 4 : (this.state.level * 2) + 4\r\n    }\r\n\r\n\r\n    calculateSkillPointsRemaining = () => {\r\n        // used anytime our skill points need to be updated or checked\r\n\r\n        var newSkillPointsRemaining = this.calculateBaseSkillPoints();\r\n\r\n        newSkillPointsRemaining -= this.calculateSpentSkillPoints();\r\n\r\n        return newSkillPointsRemaining;\r\n    }\r\n\r\n    calculateSpentSkillPoints = () => {\r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // this function is used to determine the total accumulated cost of the characters skills + resources\r\n        var spent = 0;\r\n        var playerSkills = this.state.playerHasSkill;\r\n        var playerResources = this.state.resources;\r\n\r\n        for (let skill in playerSkills) {\r\n            spent += playerSkills[skill].cost;\r\n        }\r\n\r\n        spent += (playerResources.craftPoints * this.state.CRAFT_POINT_COST) + \r\n                (playerResources.productionPoints * this.state.PRODUCTION_POINT_COST) + \r\n                (playerResources.magicPoints * this.state.MAGIC_POINT_COST);\r\n\r\n        return spent;\r\n    }\r\n\r\n    checkRequirements = (skill) => {\r\n        // return true if player meets requirements for skill\r\n    \r\n        // skill.requires is a string that is equal to anotherSkill.name required for skill\r\n        let requiredSkill = skill.requires\r\n\r\n        // skill does not have a required skill\r\n        if (requiredSkill === \"\" || requiredSkill === null) {\r\n            return true; \r\n        }\r\n\r\n        // player's skills array\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n            // if one of the player's skill contains the required skill name\r\n            if (requiredSkill.includes(pSkills[pSkill].name)) {\r\n                // we're good\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n    \r\n    playerCheckedASkillBox = (checkedSkill, e) => {\r\n        // CALLED BY Skill.js(checkBox onChange) (SkillTree.js -> Skill.js)\r\n\r\n        // add or remove a skill on checkbox change\r\n            // make sure enough skill points are available\r\n            // make sure requirements are met?\r\n            // add skill to playerHasSkill Array, or remove it\r\n\r\n        if (!this.checkRequirements(checkedSkill)) {\r\n            // console.log(\"You do not meet the requirements for \" + checkedSkill.name)\r\n            this.props.alert.show(\"You do not meet the requirements for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n            return false;\r\n        };\r\n \r\n        // if adding a checkbox was detected\r\n        if (e) {\r\n\r\n            // check the cost        \r\n            if (this.calculateSkillPointsRemaining() - checkedSkill.cost < 0) {\r\n                // console.log(\"You do not have enough skill points for \" + checkedSkill.name);\r\n                this.props.alert.show(\"You do not have enough skill points for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n                return false;\r\n            };\r\n\r\n            // roleplaying skill rules\r\n            if (!this.canPlayerGetThisRoleplayingSkill(checkedSkill)) {\r\n                return false;\r\n            }\r\n\r\n            // add skill\r\n            return this.addSkill(checkedSkill);\r\n            \r\n        } else {\r\n\r\n            // if the skill is required, don't remove it\r\n            if (this.skillIsRequired(checkedSkill)) {\r\n                return true;\r\n            }\r\n\r\n            // remove\r\n            return this.removeSkill(checkedSkill);\r\n        }\r\n    }\r\n\r\n    canPlayerGetThisRoleplayingSkill = (skill) => {\r\n    // A Character can only have 5 levels in one roleplaying skill tree,\r\n    // And 2 levels in another maximum\r\n\r\n        // filter for player RP skills\r\n        let playerRPSkills = this.state.playerHasSkill.filter(skill => skill.tree === \"roleplaying\");\r\n\r\n        // filter for tier one skills\r\n        let tierOnePlayerRPSkills = playerRPSkills.filter(skill => skill.name.includes(\"1\"))\r\n\r\n        // if the player has two tier ones already, he is inelligible for another tier one\r\n        if (tierOnePlayerRPSkills.length === 2) {\r\n            if (skill.name.includes(\"1\")) {\r\n                this.props.alert.show(\"You cannot have more than two types of roleplaying skills\", {timeout: 5000, type: 'error'})\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // filter for tier three skills\r\n        let tierThreePlayerRPSkills = playerRPSkills.filter(skill => skill.name.includes(3))\r\n\r\n        // if player has any\r\n        if (tierThreePlayerRPSkills.length !== 0) {\r\n\r\n            // if player has one already, inelligible for another\r\n            if (skill.name.includes(3) && tierThreePlayerRPSkills.length === 1) {\r\n                this.props.alert.show(\"You cannot have more than one roleplaying skill above 2nd level\", {timeout: 5000, type: 'error'})\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    skillIsRequired = (skill) => {\r\n        // don't allow player to remove a skillpoint if it's a necessary requirement for another skill the player has\r\n\r\n        // THIS FUNCTION IS ATROCIOUS\r\n\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n\r\n            // current iterations required skills\r\n            let requirementSkillString = pSkills[pSkill].requires\r\n\r\n            // if the current playerskill has a prerequisite skill\r\n            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                // if it includes the skill we are trying to remove, it's a requirement\r\n                if (requirementSkillString.includes(skill.name)) {\r\n\r\n                    // if it includes a pipe, there's another prerequisite\r\n                    if(requirementSkillString.includes(\"|\")) {\r\n\r\n                        // iterate again\r\n                        for (let pSkill2 in pSkills) {\r\n\r\n                            // if the current playerskill has a prerequisite skill\r\n                            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                                // if the NEW FOUND SKILL is required by the FIRST FOUND SKILL\r\n                                // but it does not equal the SKILL BEING REMOVED\r\n                                // the player still meets the requirements\r\n                                // (this took me way too long and it seems overcomplicated)\r\n                                if (skill.name !== pSkills[pSkill2].name && requirementSkillString.includes(pSkills[pSkill2].name)) {\r\n                                    //console.log(skill.name + \" is a prerequisite for \" + pSkills[pSkill].name + \", but player has \" + pSkills[pSkill2].name + \", which is also a prerequisite\")\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                        // console.log(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name)\r\n                        this.props.alert.show(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name, {timeout: 5000, type: 'error'})\r\n                        return true;    \r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    addResource = (resourceName, cost, max) => {\r\n        // CALLED BY: Resources.js -> Resource.js(onClick)\r\n\r\n        if (this.calculateSkillPointsRemaining() - cost < 0) {\r\n            this.props.alert.show(\"You do not have enough skill points\", {type:'error'});\r\n            return false;\r\n        };\r\n\r\n        // check if player maxed out resource amount already\r\n        if (this.state.resources[resourceName] >= max) {\r\n                // console.log(resourceName + \" limit reached\")\r\n                return false;\r\n        };\r\n\r\n        // local resources variable\r\n        let resources = this.state.resources\r\n        // add a point to this resource\r\n        resources[resourceName] += 1;\r\n\r\n        // add new resources to state and calc SPR\r\n        this.setState({resources}, () => {this.calculateSkillPointsRemaining()});\r\n\r\n        return true;\r\n    }\r\n\r\n    removeResource = (resourceName) => {\r\n         // CALLED BY: Resources.js -> Resource.js(onClick)\r\n\r\n        if (this.state.resources[resourceName] === 0) {\r\n            // console.log(\"you can't go below 0, you idiot\")\r\n            return false;\r\n        }\r\n\r\n        let resources = this.state.resources\r\n        resources[resourceName] -= 1;\r\n\r\n        this.setState({resources});\r\n    }\r\n\r\n    addSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            playerHasSkill: ([...prevState.playerHasSkill, skill]) }), function ()   {\r\n                this.calculateSkillPointsRemaining()\r\n        });\r\n        // console.log(\"You have added the \" + skill.name + \" skill\")\r\n        return true;\r\n        }\r\n   \r\n    removeSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            // filter previous state.playerhasskill array to return a new array without matching skill\r\n            playerHasSkill: prevState.playerHasSkill.filter(arrSkill => arrSkill.name !== skill.name)\r\n        }), function () {\r\n            this.calculateSkillPointsRemaining()\r\n        })\r\n\r\n        // console.log(\"You have removed the \" + skill.name + \" skill\")\r\n        return false;\r\n    }\r\n\r\n\r\n    lockChanges = () => {\r\n        // disable inputs on playerInfo, resources, and skill checkboxes\r\n        \r\n        this.props.alert.show(\"Character editing \" + (this.state.locked ? \"unl\" : \"l\") + \"ocked\")\r\n\r\n        this.setState(prevState => ({locked: !prevState.locked}));\r\n\r\n        this.calculateSkillPointsRemaining();\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n\r\n                            <Header \r\n                                lockChanges={this.lockChanges}\r\n                                resetSkills={this.resetSkills}\r\n                                locked={this.state.locked} \r\n                                saveCharacter={this.saveCharacter} \r\n                                loadCharacter={this.loadCharacter} \r\n                                deleteCharacter={this.deleteCharacter} \r\n                                characterList={this.state.characterList} \r\n                                loadCharacterList={this.loadCharacterList}\r\n                                // pass state to a button for testing\r\n                                staate={this.state} >\r\n                            </Header>\r\n\r\n                            <CharacterInfo\r\n                                level={this.state.level}\r\n                                characterName={this.state.characterName}\r\n                                country={this.state.country}\r\n                                player={this.state.player}\r\n                                race={this.state.race}\r\n                                savedXp={this.state.savedXp}\r\n                                characterInfoChange={this.characterInfoChange}\r\n                                lockChanges={this.state.locked}\r\n                                calculateSkillPointsRemaining={this.calculateSkillPointsRemaining}\r\n                            />\r\n\r\n                            <Container>\r\n                                <Resources \r\n                                    resources={this.state.resources}\r\n                                    addResource={this.addResource} \r\n                                    removeResource={this.removeResource} \r\n                                    lockChanges={this.state.locked} \r\n                                    MAGIC_POINT_COST={this.state.MAGIC_POINT_COST}\r\n                                    PRODUCTION_POINT_COST={this.state.PRODUCTION_POINT_COST}\r\n                                    CRAFT_POINT_COST={this.state.CRAFT_POINT_COST}\r\n                                />\r\n                                \r\n                                {this.state.loadingSkills ? <div>Loading skills. Please wait...</div> :\r\n                                <Row>\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"combat\">\r\n                                            <SkillTree \r\n                                                treeName=\"Combat\"\r\n                                                skills={this.state.combat} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} \r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"general\">\r\n                                            <SkillTree \r\n                                                treeName=\"General\"\r\n                                                skills={this.state.general} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                ockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"nature\">\r\n                                            <SkillTree \r\n                                                treeName=\"Nature\"\r\n                                                skills={this.state.nature} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"necromancy\">\r\n                                            <SkillTree \r\n                                                treeName=\"Necromancy\"\r\n                                                skills={this.state.necromancy} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"production\">\r\n                                                <SkillTree \r\n                                                treeName=\"Production\"\r\n                                                skills={this.state.production} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"aegis\">\r\n                                                <SkillTree \r\n                                                treeName=\"Aegis\"\r\n                                                skills={this.state.aegis} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"battle\">\r\n                                            <SkillTree \r\n                                                treeName=\"Battle\"\r\n                                                skills={this.state.battle} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"roleplaying\">\r\n                                            <SkillTree \r\n                                                treeName=\"Roleplaying\"\r\n                                                skills={this.state.roleplaying} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"compulsion\">\r\n                                            <SkillTree \r\n                                                treeName=\"Compulsion\"\r\n                                                skills={this.state.compulsion} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                    \r\n                                        <div className=\"restoration\">\r\n                                            <SkillTree \r\n                                                treeName=\"Restoration\"\r\n                                                skills={this.state.restoration} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"enchantment\">\r\n                                            <SkillTree \r\n                                                treeName=\"Enchantment\"\r\n                                                skills={this.state.enchantment} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                                }\r\n                            </Container>\r\n                        </Route>\r\n\r\n                        <Route path=\"/register\" exact component={RegisterNewUserComponent} />\r\n\r\n                        <Route path=\"/forgot\" exact component={ForgotPasswordComponent} />\r\n\r\n                        <Route path=\"/newpass:token\" exact component={NewPasswordComponent} /> \r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAlert()(App);\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from './react-alert-template-basic'\r\n\r\n// optional cofiguration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.TOP_CENTER,\r\n    timeout: 3000,\r\n    offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.FADE\r\n  }\r\n  \r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root />, document.getElementById('root'));\r\n\r\n","function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\r\n\r\nvar React = _interopDefault(require('react'));\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n  var color = _ref.color,\r\n      _ref$pushRight = _ref.pushRight,\r\n      pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n      children = _ref.children;\r\n  return React.createElement(\r\n    'svg',\r\n    {\r\n      xmlns: 'http://www.w3.org/2000/svg',\r\n      width: '24',\r\n      height: '24',\r\n      viewBox: '0 0 24 24',\r\n      fill: 'none',\r\n      stroke: color,\r\n      strokeWidth: '2',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round',\r\n      style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n    },\r\n    children\r\n  );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#2E9AFE' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n  );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#31B404' },\r\n    React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n    React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n  );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FF0040' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n  );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FFFFFF', pushRight: false },\r\n    React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n    React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n  );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\nvar alertStyle = {\r\n  borderStyle: 'solid',\r\n  borderColor: 'black',\r\n  backgroundColor: '#333',\r\n  color: 'white',\r\n  padding: '10px',\r\n  borderRadius: '1px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n  fontFamily: 'Arial',\r\n  width: '250px',\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n  marginLeft: '20px',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n  cursor: 'pointer',\r\n  color: '#FFFFFF'\r\n};\r\n\r\nvar AlertTemplate = function AlertTemplate(_ref) {\r\n  var message = _ref.message,\r\n      options = _ref.options,\r\n      style = _ref.style,\r\n      close = _ref.close;\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { onClick: close, style: _extends({}, alertStyle, style) },\r\n    options.type === 'info' && React.createElement(InfoIcon, null),\r\n    options.type === 'success' && React.createElement(SuccessIcon, null),\r\n    options.type === 'error' && React.createElement(ErrorIcon, null),\r\n    React.createElement(\r\n      'span',\r\n      { style: { flex: 2, whiteSpace: 'initial', textAlign: 'center' } },\r\n      message\r\n    ),\r\n    React.createElement(\r\n      'button',\r\n      { style: buttonStyle },\r\n      React.createElement(CloseIcon, null)\r\n    )\r\n  );\r\n};\r\n\r\nmodule.exports = AlertTemplate;\r\n"],"sourceRoot":""}