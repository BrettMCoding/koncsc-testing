{"version":3,"sources":["site_layout/character_sheet/ncs_2019.pdf","react-alert-template-basic.js","site_layout/user_management/services/AuthenticationService.js","site_layout/user_management/components/LoginComponent.js","site_layout/user_management/components/LogoutComponent.js","site_layout/user_management/components/NavCharacterList.js","site_layout/user_management/components/ConfirmationModal.js","site_layout/header/Navigation.js","site_layout/header/Header.js","site_layout/character_info/CharacterInfoInput.js","site_layout/character_info/CharacterInfoDropdownCountries.js","site_layout/character_info/CharacterInfoDropdownRaces.js","site_layout/character_info/CharacterInfo.js","site_layout/character_bio/CharacterBio.js","site_layout/resources/Resource.js","site_layout/resources/Resources.js","site_layout/skill_trees/Skill.js","site_layout/skill_trees/SkillTree.js","site_layout/user_management/components/RegisterNewUserComponent.js","site_layout/user_management/components/NewPasswordComponent.js","site_layout/user_management/components/ForgotPasswordComponent.js","site_layout/character_sheet/PrintCharacterSheet.js","App.js","index.js","site_layout/character_bio/default.png"],"names":["module","exports","ex","React","require","BaseIcon","_ref","color","_ref$pushRight","pushRight","undefined","children","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","style","marginRight","minWidth","InfoIcon","cx","cy","r","x1","y1","x2","y2","SuccessIcon","d","points","ErrorIcon","CloseIcon","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","alertStyle","borderStyle","borderColor","backgroundColor","padding","borderRadius","display","justifyContent","alignItems","boxShadow","fontFamily","boxSizing","buttonStyle","marginLeft","border","cursor","message","options","close","onClick","type","flex","whiteSpace","textAlign","username","password","axios","get","process","headers","authorization","this","createBasicAuthToken","window","btoa","localStorage","setItem","console","log","getItem","setupAxiosInterceptors","removeItem","user","token","interceptors","request","use","config","isUserLoggedIn","LoginComponent","props","APP_URL","useState","email","updateEmail","updatePassword","hasLoginFailed","setLoginFailed","showSuccessMessage","setSuccessMessage","alert","useAlert","className","name","value","onChange","event","AuthenticationService","executeBasicAuthenticationService","then","registerSuccessfulLogin","show","timeout","toggleModal","getUserLoggedInProp","loadCharacterList","catch","href","LogoutComponent","logout","NavCharacterList","characterList","map","character","id","setCurrentConfirmationModal","handleCharacter","characterName","level","race","ConfirmationModal","Modal","isOpen","confirmationModalIsOpen","toggle","toggleConfirmationModalIsOpen","ModalBody","ModalFooter","Button","Navigation","navbarIsOpen","setNavbarIsOpen","loginModalIsOpen","setLoginModalIsOpen","skillResetModalIsOpen","setSkillResetModalIsOpen","setConfirmationModalIsOpen","downloadClickable","setDownloadClickable","toggleLoginModal","toggleSkillResetModalIsOpen","handleMethod","setHandleMethod","setMessage","setId","setUserLoggedIn","boolean","hideWhenNotLoggedInWrap","content","items","from","opacity","enter","leave","transitionProps","div","Navbar","light","expand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","lockChanges","locked","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","saveCharacter","loadCharacter","deleteCharacter","disabled","printCharacterSheet","setTimeout","ModalHeader","resetSkills","Header","Container","Component","CharacterInfoInput","cName","infoName","displayName","placeholder","maxLength","infoValue","e","characterInfoChange","CharacterInfoDropdownCountries","dropdownOpen","setDropdownOpen","countries","optionsMap","DropdownItem","Dropdown","setActiveFromChild","size","country","CharacterInfoDropdownRaces","races","CharacterInfo","Row","Col","nameClass","player","calculateSkillPointsRemaining","savedXp","CharacterBio","setIsOpen","collapseIsOpen","setCollapseIsOpen","characterPicture","url","setUrl","icon","faChevronUp","faChevronDown","src","characterBio","onInput","changeCharacterBio","onPaste","clipboardData","getData","changeCharacterPicture","Resource","removeResource","addResource","resourceName","resource","max","skillCss","cost","fillBarAnim","useSpring","ResourceBar","Filler","pointsGrantedPerSkillPoint","isLoaded","Resources","MAGIC_POINT_COST","resources","magicPoints","PRODUCTION_POINT_COST","productionPoints","CRAFT_POINT_COST","craftPoints","Skill","playerHasSkill","playerSkills","compareIds","some","skill","addSpaces","string","tier","checkedStyle","freeLanguages","find","foundSkill","checked","playerCheckedASkillBox","needsApproval","SkillTree","numOfSkillsInTree","skills","freeLangsNum","treeName","filter","tree","toLowerCase","RegisterNewUserComponent","hasRegisterFailed","setRegisterFailed","errorMessage","setErrorMessage","registerClickable","setRegisterClickable","useEffect","document","title","persist","post","API_URL","res","err","response","data","requestRegisterNewUser","NewPasswordComponent","password2","updatePassword2","match","params","requestNewPassword","ForgotPasswordComponent","PDFDocument","PDFArray","PDFHexString","PDFNumber","breakTextIntoLines","PDFOperator","degrees","drawLinesOfText","Ops","PDFOperatorNames","PDFName","rgb","StandardFonts","asPDFName","PDFBool","PDFContentStream","pushGraphicsState","popGraphicsState","getAcroForm","pdfDoc","catalog","lookup","of","getAcroFields","acroForm","fieldRefs","lookupMaybe","fields","Array","idx","len","lockField","acroField","set","findAcroFieldByName","fieldName","fillAcroTextField","text","font","multiline","rect","N","multiLineAppearanceStream","singleLineAppearanceStream","context","obj","fromText","sizeAtHeight","lines","encodeText","textFieldAppearanceStream","t","widthOfTextAtSize","line","x","y","tag","dict","doc","Type","Subtype","FormType","BBox","Font","F0","ref","operators","BeginMarkedContent","rotate","xSkew","ySkew","lineHeight","EndMarkedContent","stream","register","PrintCharacterSheet","state","savedSkillPoints","a","fetch","KonCharacterSheet","arrayBuffer","pdfStream","load","registerFontkit","fontkit","embedFont","TimesRoman","timesRomanFont","True","fillInField","field","Error","toString","magicPowerField","craftPointField","productionPointField","skillBox","forEach","save","pdfBytes","blob","Blob","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","Download","App","loadingSkills","combat","general","production","crafting","roleplaying","scholar","specialaccess","aegis","battle","nature","necromancy","compulsion","restoration","enchantment","defaultAvatar","sortSkillsByTree","setState","prevState","saveLocalCharacter","values","JSON","stringify","loadLocalCharacter","localStorageCharacter","parse","method","status","checkCharacterFreeLanguages","updatedInfo","addFreeLanguages","languageNamesArray","hasFreeLanguages","generalSkills","languageName","getLanguageByName","push","lang","removeSkill","calculateBaseSkillPoints","newSkillPointsRemaining","calculateSpentSkillPoints","spent","playerResources","checkRequirements","requiredSkill","requires","pSkills","pSkill","includes","checkedSkill","canPlayerGetThisRoleplayingSkill","doesPlayerHaveMagicPower","addSkill","skillIsRequired","doesPlayerHaveAnySpells","playerRPSkills","tierThreePlayerRPSkills","requirementSkillString","pSkill2","arrSkill","printCharacterSheetDisabled","URL","exact","path","staate","component","withAlert","position","positions","TOP_CENTER","offset","transition","transitions","FADE","render","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.08552d79.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ncs_2019.7f181374.pdf\";","function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\r\n\r\nvar React = _interopDefault(require('react'));\r\n\r\nvar BaseIcon = function BaseIcon(_ref) {\r\n  var color = _ref.color,\r\n      _ref$pushRight = _ref.pushRight,\r\n      pushRight = _ref$pushRight === undefined ? true : _ref$pushRight,\r\n      children = _ref.children;\r\n  return React.createElement(\r\n    'svg',\r\n    {\r\n      xmlns: 'http://www.w3.org/2000/svg',\r\n      width: '24',\r\n      height: '24',\r\n      viewBox: '0 0 24 24',\r\n      fill: 'none',\r\n      stroke: color,\r\n      strokeWidth: '2',\r\n      strokeLinecap: 'round',\r\n      strokeLinejoin: 'round',\r\n      style: { marginRight: pushRight ? '20px' : '0', minWidth: 24 }\r\n    },\r\n    children\r\n  );\r\n};\r\n\r\nvar InfoIcon = function InfoIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#2E9AFE' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '8' })\r\n  );\r\n};\r\n\r\nvar SuccessIcon = function SuccessIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#31B404' },\r\n    React.createElement('path', { d: 'M22 11.08V12a10 10 0 1 1-5.93-9.14' }),\r\n    React.createElement('polyline', { points: '22 4 12 14.01 9 11.01' })\r\n  );\r\n};\r\n\r\nvar ErrorIcon = function ErrorIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FF0040' },\r\n    React.createElement('circle', { cx: '12', cy: '12', r: '10' }),\r\n    React.createElement('line', { x1: '12', y1: '8', x2: '12', y2: '12' }),\r\n    React.createElement('line', { x1: '12', y1: '16', x2: '12', y2: '16' })\r\n  );\r\n};\r\n\r\nvar CloseIcon = function CloseIcon() {\r\n  return React.createElement(\r\n    BaseIcon,\r\n    { color: '#FFFFFF', pushRight: false },\r\n    React.createElement('line', { x1: '18', y1: '6', x2: '6', y2: '18' }),\r\n    React.createElement('line', { x1: '6', y1: '6', x2: '18', y2: '18' })\r\n  );\r\n};\r\n\r\nvar _extends = Object.assign || function (target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i];\r\n\r\n    for (var key in source) {\r\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n        target[key] = source[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\nvar alertStyle = {\r\n  borderStyle: 'solid',\r\n  borderColor: 'black',\r\n  backgroundColor: '#333',\r\n  color: 'white',\r\n  padding: '10px',\r\n  borderRadius: '1px',\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  boxShadow: '0px 2px 2px 2px rgba(0, 0, 0, 0.03)',\r\n  fontFamily: 'Arial',\r\n  width: '250px',\r\n  boxSizing: 'border-box'\r\n};\r\n\r\nvar buttonStyle = {\r\n  marginLeft: '20px',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n  cursor: 'pointer',\r\n  color: '#FFFFFF'\r\n};\r\n\r\nvar AlertTemplate = function AlertTemplate(_ref) {\r\n  var message = _ref.message,\r\n      options = _ref.options,\r\n      style = _ref.style,\r\n      close = _ref.close;\r\n\r\n  return React.createElement(\r\n    'div',\r\n    { onClick: close, style: _extends({}, alertStyle, style) },\r\n    options.type === 'info' && React.createElement(InfoIcon, null),\r\n    options.type === 'success' && React.createElement(SuccessIcon, null),\r\n    options.type === 'error' && React.createElement(ErrorIcon, null),\r\n    React.createElement(\r\n      'span',\r\n      { style: { flex: 2, whiteSpace: 'initial', textAlign: 'center' } },\r\n      message\r\n    ),\r\n    React.createElement(\r\n      'button',\r\n      { style: buttonStyle },\r\n      React.createElement(CloseIcon, null)\r\n    )\r\n  );\r\n};\r\n\r\nmodule.exports = AlertTemplate;\r\n","import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_DOMAIN\r\n\r\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\r\n\r\nclass AuthenticationService {\r\n\r\n    executeBasicAuthenticationService(username, password) {\r\n        \r\n        return axios.get(`${API_URL}/auth`,\r\n            { headers: { authorization: this.createBasicAuthToken(username, password) } })\r\n    }\r\n\r\n    createBasicAuthToken(username, password) {\r\n        let basicAuth = 'Basic ' + window.btoa(username + \":\" + password)\r\n\r\n        return basicAuth\r\n    }\r\n\r\n    registerSuccessfulLogin(username, password) {\r\n\r\n        localStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\r\n        console.log(\"you are now logged in as: \")\r\n        console.log(localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME))\r\n        console.log(\"\\n\\n\\n\\n\\n\")\r\n        localStorage.setItem(\"USER_TOKEN\", this.createBasicAuthToken(username, password))\r\n        this.setupAxiosInterceptors(localStorage.getItem(\"USER_TOKEN\"))\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return false\r\n        return true\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = localStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n\r\n    setupAxiosInterceptors(token) {\r\n        axios.interceptors.request.use(\r\n            (config) => {\r\n                if (this.isUserLoggedIn()) {\r\n                    config.headers.authorization = token\r\n                }\r\n                return config\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()\r\n","import React, { useState } from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService';\r\nimport { useAlert } from 'react-alert';\r\n\r\nfunction LoginComponent(props) {\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [password, updatePassword] = useState('');\r\n    const [hasLoginFailed, setLoginFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const alert = useAlert();\r\n\r\n    const loginClicked = () => {\r\n        ///console.log(\"\\n\\n\\n\\n\\n\")\r\n        //console.log(\"attempting to login\")\r\n        //console.log(\"\\n\\n\\n\\n\\n\")\r\n\r\n        AuthenticationService\r\n            .executeBasicAuthenticationService(email, password)\r\n            .then(() => {\r\n                AuthenticationService.registerSuccessfulLogin(email, password)\r\n                alert.show(\"Login Successful\", {type:'success', timeout: 5000})\r\n                // this.props.history.push(`/courses`)\r\n\r\n                props.toggleModal();\r\n                props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn());\r\n                props.loadCharacterList(alert);\r\n\r\n            }).catch(() => {\r\n                setSuccessMessage(false);\r\n                setLoginFailed(true);\r\n                //console.log(\"Login Failed. Likely invalid credentials (401)\")\r\n                //console.log(\"\\n\\n\\n\\n\\n\")\r\n            })\r\n    }\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n\r\n    return (\r\n        <div>\r\n        {!props.isUserLoggedIn &&\r\n                <div className=\"container form-group d-flex flex-column\">\r\n                    <h1 className=\"text-center\">Login</h1>\r\n\r\n                    {hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Login Successful</div>}\r\n\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={loginClicked}>Login</button>\r\n                    <div>\r\n                        <a href={APP_URL + '/#/register'} className=\"btn btn-outline-secondary text-center\">Create account</a>\r\n                        <a href={APP_URL + '/#/forgot'} className=\"btn btn-outline-secondary text-center\">Forgot your password?</a>\r\n                        \r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginComponent","import React from 'react';\r\nimport AuthenticationService from '../services/AuthenticationService'\r\nimport { useAlert } from 'react-alert';\r\n\r\nexport default function LogoutComponent(props) {\r\n    const alert = useAlert();\r\n\r\n    const logout = () => {\r\n        AuthenticationService.logout()\r\n        alert.show('Logout Successful', {type:'success', timeout:5000})\r\n        props.getUserLoggedInProp(AuthenticationService.isUserLoggedIn())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n                <button className=\"btn btn-danger\" onClick={logout}>Logout</button> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NavCharacterList(props) {\r\n    // return a div map of all users characters by id\r\n    // on click, handleMethod, message, and characterId is passed to our confirmationModal\r\n    // to have the user confirm before losing/overwriting data\r\n    \r\n    return props.characterList.map((character) => {\r\n            \r\n            return <div className=\"character-list-slot btn-success btn-sm\"\r\n\r\n            id={character.id} \r\n\r\n            onClick={() => \r\n                {props.setCurrentConfirmationModal(\r\n                    // pass handle method (save/load/delete)\r\n                    props.handleCharacter, \r\n                    // pass related save/load/delete message with character name\r\n                    (props.message + character.characterName + \")\"), \r\n                    // pass character id if user confirms choice\r\n                    character.id)}}>\r\n\r\n                    {/* displayed as \"Charactername. level race */}\r\n                    {character.characterName}.&nbsp;<br />Level&nbsp;{character.level}&nbsp;{character.race}\r\n                \r\n            </div>\r\n        });\r\n}\r\n","import React from 'react'\r\nimport { Modal, ModalBody, ModalFooter, Button } from 'reactstrap'\r\n\r\nexport default function ConfirmationModal(props) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal isOpen={props.confirmationModalIsOpen} toggle={props.toggleConfirmationModalIsOpen}>\r\n                <ModalBody>\r\n                    {props.message}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={props.toggleConfirmationModalIsOpen}>Cancel</Button>\r\n                    <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.handleCharacter(props.id, props.alert);props.toggleConfirmationModalIsOpen()}}>Confirm</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport LoginComponent from '../user_management/components/LoginComponent';\r\nimport LogoutComponent from '../user_management/components/LogoutComponent';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Button,\r\n    // NavbarText\r\n} from 'reactstrap';\r\nimport { animated } from 'react-spring';\r\nimport { Transition } from 'react-spring/renderprops';\r\nimport AuthenticationService from '../user_management/services/AuthenticationService';\r\nimport NavCharacterList from '../user_management/components/NavCharacterList';\r\nimport ConfirmationModal from '../user_management/components/ConfirmationModal';\r\nimport { useAlert } from 'react-alert';\r\n\r\n// Navigation is the house for our character / user management\r\n\r\nfunction Navigation(props) {\r\n  const [navbarIsOpen, setNavbarIsOpen] = useState(false);\r\n  const [loginModalIsOpen, setLoginModalIsOpen] = useState(false);\r\n  const [skillResetModalIsOpen, setSkillResetModalIsOpen] = useState(false);\r\n  const [confirmationModalIsOpen, setConfirmationModalIsOpen] = useState(false);\r\n\r\n  // alert popup system\r\n  const alert = useAlert();\r\n\r\n  // log state test button\r\n  // const logs = () => {console.log(props.staate)}\r\n\r\n  // download PDF button wrapped in a timeout function\r\n  const [downloadClickable, setDownloadClickable] = useState(true);\r\n\r\n  const downloadClicked = () => {\r\n    // downloadclickable is used as a disabled bool for the button in nav\r\n    setDownloadClickable(false);\r\n    props.printCharacterSheet()\r\n\r\n    // print it and re-enable the button after 2 seconds\r\n    setTimeout(() => {\r\n        setDownloadClickable(true)\r\n        }, 2000)\r\n    \r\n  }\r\n\r\n  // navbar collapse/expand\r\n  const toggleNavbar = () => setNavbarIsOpen(!navbarIsOpen);\r\n\r\n  // login modal\r\n  const toggleLoginModal = () => setLoginModalIsOpen(isUserLoggedIn ? false : !loginModalIsOpen);\r\n\r\n  // skill reset modal\r\n  const toggleSkillResetModalIsOpen = () => {\r\n    setSkillResetModalIsOpen(!skillResetModalIsOpen)};\r\n\r\n  // confirmation modal\r\n  // the confirmationModal is setup to handle Save/Load/Delete based on the user \r\n  // clicking a character in one of our NavCharacterLists\r\n  const toggleConfirmationModalIsOpen = () => {\r\n    setConfirmationModalIsOpen(!confirmationModalIsOpen)};\r\n    \r\n    // handleMethod is Save/Load/Delete character, set by whichever list option is clicked\r\n    const [handleMethod, setHandleMethod] = useState(\"\");\r\n    // message is added to confirmationModal as \"are you sure you want to save/load/delete?\" similarly to the handleMethod\r\n    const [message, setMessage] = useState(\"\");\r\n    // id is added to confirmationModal, \r\n    const [id, setId] = useState(null);\r\n\r\n  // when the user clicks to save/load/delete a character,\r\n  // a confirmationModal is setup with the following args\r\n  // and then displayed to make sure the user meant to take that action \r\n  const setCurrentConfirmationModal = (handleMethod, message, id) => {\r\n    setHandleMethod(() => handleMethod);\r\n    setMessage(message);\r\n    setId(id);\r\n    toggleConfirmationModalIsOpen();\r\n  }\r\n\r\n  // local state isUserLoggedIn is a little clunky, but updating local State makes rendering changes\r\n  // to the buttons and lists easier\r\n  const [isUserLoggedIn, setUserLoggedIn] = useState(AuthenticationService.isUserLoggedIn());\r\n  const getUserLoggedInProp = (boolean) => {\r\n    setUserLoggedIn(boolean);\r\n  }\r\n\r\n  // using react-spring render-props API to make an animation transition\r\n  // this will hide the character list features when user is not logged in\r\n  const hideWhenNotLoggedInWrap = (content) => {\r\n      // Transition object controls opacity animation.\r\n      // Used to show/hide content on login/logout\r\n    return <div className=\"align-items-center d-flex\"><Transition\r\n        items={isUserLoggedIn}\r\n        from={{ opacity: 0 }}\r\n        enter={{ opacity: 1 }}\r\n        leave={{ opacity: 0 }}>\r\n        {isUserLoggedIn => isUserLoggedIn && ((transitionProps) => <animated.div style={transitionProps}> \r\n            \r\n            {/* below content arg is whatever element we want to show when user logs in */}\r\n            {content}\r\n\r\n    </animated.div>)}</Transition></div>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Navbar className=\"navbar navbar-dark\" light expand=\"md\">\r\n        <NavbarToggler onClick={toggleNavbar} />\r\n\r\n        <Collapse isOpen={navbarIsOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n              <NavLink href=\"http://kingdomsofnovitas.net/\">kingdomsofnovitas.net</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n              <NavLink href=\"https://www.facebook.com/groups/KingdomsOfNovitas/\">Facebook</NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={toggleSkillResetModalIsOpen} >Reset Skills</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" onClick={props.lockChanges} >{props.locked ? \"Unl\" : \"L\"}ock Editing</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n            <NavItem className=\"align-items-center d-flex\">\r\n                { isUserLoggedIn && <LogoutComponent getUserLoggedInProp={getUserLoggedInProp} /> }\r\n\r\n                { !isUserLoggedIn &&<Button color=\"success\" onClick={toggleLoginModal}>Login</Button>}\r\n            </NavItem>\r\n\r\n            {hideWhenNotLoggedInWrap(\r\n                <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Save\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.saveCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to save this character? (Character in slot: \"}/>\r\n                    <div className=\"character-list-slot btn-success btn-sm\" onClick={()=>{setCurrentConfirmationModal(props.saveCharacter, \"Are you sure you want to save a new character?\")}}>New Character</div>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                    Load\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                    <NavCharacterList characterList={props.characterList} handleCharacter={props.loadCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n            {hideWhenNotLoggedInWrap(\r\n            <NavItem>\r\n                    <UncontrolledDropdown nav inNavbar>\r\n                    <DropdownToggle nav caret>\r\n                        Delete\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                        <NavCharacterList characterList={props.characterList} handleCharacter={props.deleteCharacter} setCurrentConfirmationModal={setCurrentConfirmationModal} message={\"Are you sure you want to load this character? (Character: \"}/>\r\n                    </DropdownMenu>\r\n                    </UncontrolledDropdown>\r\n            </NavItem>\r\n            )}\r\n\r\n            <NavItem>\r\n                <NavLink>\r\n                     <button className=\"navButton\" disabled={!downloadClickable} onClick={downloadClicked} >Download PDF</button>\r\n                </NavLink>\r\n            </NavItem>\r\n\r\n          </Nav>\r\n        </Collapse>\r\n                \r\n                {/* // login modal */}\r\n                <Modal isOpen={loginModalIsOpen} toggle={toggleLoginModal}>\r\n                    <ModalHeader toggle={toggleLoginModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <LoginComponent isUserLoggedIn={isUserLoggedIn} getUserLoggedInProp={getUserLoggedInProp} toggleModal={toggleLoginModal} loadCharacterList={props.loadCharacterList}/>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                            <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={toggleLoginModal}>Cancel</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* confirm skill reset modal */}\r\n                <Modal isOpen={skillResetModalIsOpen} toggle={toggleSkillResetModalIsOpen}>\r\n                    <ModalBody>\r\n                        <div>Are you sure you want to reset your skills? (Unsaved changes will be lost)</div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={props.toggleConfirmationModalIsOpen}>Cancel</Button>\r\n                        <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.resetSkills(); toggleSkillResetModalIsOpen();}}>Reset Skills</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n\r\n                {/* confirm save/load/delete modal */}\r\n                <ConfirmationModal confirmationModalIsOpen={confirmationModalIsOpen}\r\n                toggleConfirmationModalIsOpen={toggleConfirmationModalIsOpen}\r\n                handleCharacter={handleMethod} message={message} id={id} alert={alert} />\r\n               \r\n        </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport Navigation from './Navigation';\r\nimport {Container} from 'reactstrap';\r\n\r\n// Header contains our title and the Navigation bar\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <div className=\"header-title\">\r\n                        <h1>KINGDOMS OF NOVITAS</h1>\r\n                        <h2>Online Character Sheet | Skill Calculator</h2>\r\n                    </div>\r\n                    <Navigation \r\n                        lockChanges={this.props.lockChanges} \r\n                        resetSkills={this.props.resetSkills}\r\n                        locked={this.props.locked} \r\n                        saveCharacter={this.props.saveCharacter} \r\n                        loadCharacter={this.props.loadCharacter} \r\n                        deleteCharacter={this.props.deleteCharacter} \r\n                        characterList={this.props.characterList} \r\n                        loadCharacterList={this.props.loadCharacterList}\r\n                        printCharacterSheet={this.props.printCharacterSheet}\r\n                        // passed to button for testing\r\n                        // staate={this.props.staate}\r\n                        />\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Nav.propTypes = {\r\n//     lockChanges: PropTypes.func.isRequired\r\n// }\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction CharacterInfoInput(props) {\r\n    // the display for character info where the input should be text\r\n    let cName = \"info-input\";\r\n    if (props.infoName === \"characterName\") {\r\n        cName += \" name\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {props.displayName}:<br />&nbsp;\r\n        <input \r\n            className={cName}\r\n            type=\"text\" \r\n            placeholder={props.placeholder} \r\n            maxLength={props.maxLength} \r\n            value={props.infoValue} \r\n            disabled={props.lockChanges} \r\n            onChange = {e => {\r\n                props.characterInfoChange(props.infoName, e.target.value)}}/>\r\n        </div>\r\n);\r\n\r\n}\r\n\r\nexport default CharacterInfoInput;","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nexport default function CharacterInfoDropdownCountries(props) {\r\n    // the display for character info where the input should be a drop down\r\n    \r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    // countries placeholder\r\n    const countries = props.countries\r\n\r\n    const optionsMap = (countries === undefined ? <div>Loading countries...</div> : countries.map(i => ( <DropdownItem className=\"info-dropdown-item\" disabled={props.lockChanges} key={i.name} onClick={(e) => {props.characterInfoChange(\"country\", i.name)}}>{i.name}</DropdownItem> )))\r\n\r\n    const toggle = () => setDropdownOpen(dropdownOpen => !dropdownOpen);\r\n\r\n    return (\r\n        <div>Country:\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle} setActiveFromChild={true} size=\"md\">\r\n                <DropdownToggle caret className=\"navButton p-0 pl-2\">\r\n                    <span className={(props.country === \"\" ? \"\" : \"mock-input-dropdown\")}>\r\n                    {(props.country === \"\" ? \"Select a country\" : props.country)}\r\n                    </span>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {optionsMap}\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nexport default function CharacterInfoDropdownRaces(props) {\r\n    // the display for character info where the input should be a drop down\r\n    \r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n    // races placeholder\r\n    const races = props.races\r\n\r\n    const optionsMap = (races === undefined ? <div>Loading races...</div> : races.map(i => ( <DropdownItem className=\"info-dropdown-item\" key={i.name} disabled={props.lockChanges} onClick={(e) => {props.characterInfoChange(\"race\", i.name)}}>{i.name}</DropdownItem> )))\r\n\r\n    const toggle = () => setDropdownOpen(dropdownOpen => !dropdownOpen);\r\n\r\n    return (\r\n        <div>Race:\r\n            <Dropdown isOpen={dropdownOpen} toggle={toggle} setActiveFromChild={true} size=\"md\">\r\n                <DropdownToggle caret className=\"navButton p-0 pl-2\">\r\n                    <span className={(props.race === \"\" ? \"\" : \"mock-input-dropdown\")}>\r\n                    {(props.race === \"\" ? \"Select a race\" : props.race)}</span>\r\n                </DropdownToggle>\r\n                <DropdownMenu>\r\n                    {optionsMap}\r\n                </DropdownMenu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n","import React, {Component} from 'react';\r\nimport { Container, Row, Col, } from 'reactstrap';\r\nimport CharacterInfoInput from './CharacterInfoInput';\r\nimport CharacterInfoDropdownCountries from './CharacterInfoDropdownCountries';\r\nimport CharacterInfoDropdownRaces from './CharacterInfoDropdownRaces';\r\n\r\nexport class CharacterInfo extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"characterinfo-box\">\r\n                                <div className=\"characterinfo-content\">\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Character Name\"\r\n                                                infoName=\"characterName\" \r\n                                                infoValue={this.props.characterName}\r\n                                                maxLength=\"50\"\r\n                                                placeholder=\"Enter a Character Name\"\r\n                                                characterInfoChange={this.props.characterInfoChange}\r\n                                                lockChanges={this.props.lockChanges}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                                <CharacterInfoDropdownRaces \r\n                                                    characterInfoChange={this.props.characterInfoChange}\r\n                                                    race={this.props.race}\r\n                                                    races={this.props.races}\r\n                                                    lockChanges={this.props.lockChanges} />\r\n                                        </Col>\r\n\r\n                                        <Col>\r\n                                            <CharacterInfoDropdownCountries \r\n                                                characterInfoChange={this.props.characterInfoChange}\r\n                                                country={this.props.country}\r\n                                                countries={this.props.countries}\r\n                                                lockChanges={this.props.lockChanges} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            nameClass=\" name\"\r\n                                            displayName=\"Player\"\r\n                                            infoName=\"player\" \r\n                                            infoValue={this.props.player}\r\n                                            maxLength=\"32\"\r\n                                            placeholder=\"Enter a player name\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                            className=\"inputbox\"\r\n                                            displayName=\"Level\"\r\n                                            infoName=\"level\" \r\n                                            infoValue={this.props.level}\r\n                                            maxLength=\"3\"\r\n                                            placeholder=\"1\"\r\n                                            characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className=\"skillpointsremaining\">Skill Points Remaining: <div className=\"mock-input\">&nbsp;&nbsp;{this.props.calculateSkillPointsRemaining()}</div></div>\r\n                                        </Col>\r\n                                        \r\n                                        <Col>\r\n                                            <CharacterInfoInput \r\n                                                className=\"inputbox\"\r\n                                                displayName=\"Saved XP\"\r\n                                                infoName=\"savedXp\" \r\n                                                infoValue={this.props.savedXp}\r\n                                                maxLength=\"3\"\r\n                                                placeholder=\"0\"\r\n                                                lockChanges={this.props.lockChanges}\r\n                                                characterInfoChange={this.props.characterInfoChange}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CharacterInfo","import React, { useState } from 'react'\r\nimport { Container, } from 'reactstrap';\r\nimport { Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    Button, \r\n    Collapse} from 'reactstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp} from '@fortawesome/free-solid-svg-icons'\r\n\r\n    \r\nexport default function CharacterBio(props) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [collapseIsOpen, setCollapseIsOpen] = useState(false);\r\n    const [url, setUrl] = useState(props.characterPicture)\r\n\r\n    return (\r\n            <div>\r\n                <Container>\r\n                        {/* COLLAPSING HEADER */}\r\n                        <h3 className=\"collapser-header mb-0 d-flex justify-content-between\">\r\n                        <button className=\"btn-sm btn-dark float-left\" onClick={() => setCollapseIsOpen(!collapseIsOpen)}><FontAwesomeIcon icon={collapseIsOpen ? faChevronUp : faChevronDown} /></button>\r\n\r\n                        <span className=\"text-align-center justify-content-center\">Character Bio</span>\r\n\r\n                        <button className=\"btn-sm btn-dark float-right\" onClick={() => setCollapseIsOpen(!collapseIsOpen)}><FontAwesomeIcon icon={collapseIsOpen ? faChevronUp : faChevronDown} /></button></h3>\r\n                    <Collapse isOpen={collapseIsOpen}>\r\n\r\n\r\n                        <div className=\"character-bio mb-0 mt-0 d-flex flex-wrap flex-row\">\r\n                            {/* CHARACTER PICTURE BOX */}\r\n                            <div className=\"imgbox p-2\">\r\n                                <div className=\"imgbox-overlay\" onClick={() => {if (!props.lockChanges) {setIsOpen(!isOpen)}}}></div>\r\n\r\n                                <img className=\"character-picture pd-2\" src={props.characterPicture}></img>\r\n\r\n                                <div className=\"imgboxtext\">\r\n                                    change picture\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* CHARACTER BIOGRAPHY TEXTBOX */}\r\n                                <textarea value={props.characterBio} className=\"character-bio-text m-2 pd-2 flex-grow-1\" type=\"text\" placeholder=\"Enter a character description\" maxLength=\"100000\" disabled={props.lockChanges} onInput={e => {props.changeCharacterBio(e.target.value)}} />\r\n                            {/* </div> */}\r\n\r\n                        </div>\r\n                    </Collapse>\r\n                </Container>\r\n\r\n                {/* character picture URL changer modal */}\r\n                <Modal isOpen={isOpen} >\r\n                    <ModalBody>\r\n                        <div>Please enter URL for your character picture</div>\r\n                            \r\n                        <div>Image will be resized to 246x246</div>\r\n                        \r\n                        <div>(must be a direct image link)</div>\r\n\r\n                        <input className=\"character-bio-input\" maxLength=\"100000\" type=\"text\" placeholder=\"enter URL\" onInput={e => {setUrl(e.target.value)}} onPaste={e => {setUrl(e.clipboardData.getData('Text'))}}/>\r\n\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n\r\n                        <Button className=\" m-auto w-50 \" color=\"secondary\" onClick={() => setIsOpen(!isOpen)}>Cancel</Button>\r\n\r\n                        <Button className=\" m-auto w-50 \" color=\"success\" onClick={() => {props.changeCharacterPicture(url); setIsOpen(!isOpen)}}>OK</Button>\r\n\r\n                    </ModalFooter>\r\n                </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {Row} from 'reactstrap';\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nexport default function Resource(props) {\r\n    // simplify prop drilling\r\n    const { removeResource, addResource, lockChanges } = props.props;\r\n    const { resourceName, resource, max, skillCss, cost, displayName } = props;\r\n    \r\n    // Resource bar step\r\n    const step = () => {\r\n        if (max === 20) {\r\n            return 5;\r\n        }\r\n        return 10;\r\n    }\r\n\r\n    // calculated width % string, send to Filler\r\n    const fillBarAnim = useSpring({ width: resource ? resource * step() + '%' : 0 + '%' })\r\n\r\n    // Resource ProgressBar\r\n    const ResourceBar = () => {\r\n        return (\r\n            <div className=\"progress-bar\">\r\n                <div className=\"bar-text\">{displayName}: {resource} / {max}</div>\r\n                <Filler />\r\n            </div>\r\n            )\r\n    }\r\n      \r\n    // ANIMATION CALL ON CLICKING TOO FAST LEAKING MEMORY?\r\n    const Filler = () => {\r\n        return <animated.div className={\"filler \" + skillCss} style={fillBarAnim} />\r\n    }\r\n\r\n    const isLoaded = (resource) => {\r\n        // if the props aren't loaded and they come back as undefined,\r\n        // render the component as \"Loading...\"\r\n        return (resource === undefined) ? <div>Loading...</div> : \r\n\r\n            <Row className=\"d-flex flex-nowrap justify-content-center rscrow\">\r\n\r\n            <button type=\"button\" className=\"btn btn-danger btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                removeResource(resourceName)\r\n            }}>\r\n\r\n                -\r\n\r\n            </button>\r\n            \r\n            <ResourceBar />\r\n\r\n            <button type=\"button\" className=\"btn btn-success btn-sm rscbtn\" disabled={lockChanges} onClick={() => {\r\n                addResource(resourceName, cost, max)\r\n            }} >\r\n                \r\n                +\r\n                \r\n            </button>\r\n\r\n            <div className=\"resource-cost\">{cost * props.pointsGrantedPerSkillPoint}</div>\r\n\r\n            </Row>\r\n\r\n\r\n            };\r\n\r\n    return isLoaded(resource);\r\n}\r\n","import React, { useState } from 'react'\r\nimport Resource from './Resource';\r\nimport { Collapse } from 'reactstrap' \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp} from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Resources(props) {\r\n    const [collapseIsOpen, setCollapseIsOpen] = useState(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"resourcebox mt-3\">\r\n\r\n\r\n                {/* With resources, the cost is set locally and not in the database, unlike skills. */}\r\n                        <h3 className=\"collapser-header mb-2 d-flex justify-content-between\">\r\n                        <button className=\"btn-sm btn-dark float-left\" onClick={() => setCollapseIsOpen(!collapseIsOpen)}><FontAwesomeIcon icon={collapseIsOpen ? faChevronUp : faChevronDown} /></button>\r\n\r\n                        <span className=\"text-align-center justify-content-center resources\">Resources</span>\r\n\r\n                        <button className=\"btn-sm btn-dark float-right\" onClick={() => setCollapseIsOpen(!collapseIsOpen)}><FontAwesomeIcon icon={collapseIsOpen ? faChevronUp : faChevronDown} /></button></h3>\r\n\r\n                    {/* <h3 className=\"resources\">Resources</h3> */}\r\n\r\n                    <Collapse isOpen={collapseIsOpen}>\r\n\r\n                    {/* Magic Power */}\r\n                    <Resource props={props} \r\n                                displayName={\"Magic Power\"} \r\n                                cost={props.MAGIC_POINT_COST} \r\n                                max={20}\r\n                                pointsGrantedPerSkillPoint={\"1\"}\r\n                                \r\n                                resourceName={\"magicPoints\"}\r\n\r\n                                resource={props.resources.magicPoints}\r\n                                skillCss={\"magic\"}\r\n                    />\r\n                    \r\n                    {/* Production */}\r\n                    <Resource props={props} \r\n                                displayName={\"Production\"} \r\n                                cost={props.PRODUCTION_POINT_COST} \r\n                                max={20} \r\n                                pointsGrantedPerSkillPoint={\"2\"}\r\n\r\n                                resourceName={\"productionPoints\"}\r\n\r\n                                resource={props.resources.productionPoints}\r\n                                skillCss={\"production\"}\r\n                    />\r\n\r\n                    {/* Craft */}\r\n                    <Resource props={props}\r\n                                displayName={\"Craft\"} \r\n                                cost={props.CRAFT_POINT_COST} \r\n                                max={20}\r\n                                pointsGrantedPerSkillPoint={\"2\"} \r\n\r\n                                resourceName={\"craftPoints\"}\r\n\r\n                                resource={props.resources.craftPoints}\r\n                                skillCss={\"craft\"}\r\n                    />\r\n\r\n                    </Collapse> \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nfunction Skill(props){\r\n\r\n    // local management. re-enable if skill checking is bugged,\r\n    // as well as lines 44 & 47\r\n    //const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const playerHasSkill = (playerSkills) => { \r\n        // if state.playerskills are undefined, return false\r\n        return (playerSkills === undefined) ?\r\n            false : compareIds(playerSkills)\r\n    }\r\n    \r\n    // search playerskills for a match\r\n    const compareIds = (playerSkills) => {\r\n\r\n        return playerSkills.some(skill => skill.id === props.skill.id);\r\n\r\n    }\r\n\r\n   const addSpaces = (string) => {\r\n           if (props.skill.tier === 2) {\r\n                return '  ';\r\n           } else if (props.skill.tier === 3) {\r\n                return '    ';\r\n           } else if (props.skill.tier === 4) {\r\n                return '      ';\r\n           } else if (props.skill.tier === 5) {\r\n                return '        ';\r\n           }\r\n   }\r\n\r\n   const checkedStyle = playerHasSkill(props.playerSkills) ? \" checked\" : \"\";\r\n\r\n   // check if this skill was located in the free language array\r\n   if (props.freeLanguages[0] !== undefined){\r\n        if (props.freeLanguages.find(foundSkill => foundSkill.name === props.skill.name)) {\r\n            return <div className={\"skill row d-flex flex-nowrap checked\"}>\r\n                        <div className={\"skillBody col pl-1 checked\"}>\r\n                            <p>\r\n                            <input disabled={true} type=\"checkbox\" checked={true} /> \r\n                                {' '} {addSpaces(props.skill.name)}\r\n                                {props.skill.name}\r\n                            </p>\r\n                            </div>\r\n                        <div className=\"skillCost d-inline-flex flex-nowrap pr-1\">{props.skill.cost}</div>\r\n                    </div>\r\n        }\r\n    }\r\n\r\n    const needsApproval = () => {\r\n    // if skill requires approval, modify string\r\n        if (props.skill.needsApproval === 1) {\r\n            return \"*\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={\"skill row d-flex flex-nowrap \" + checkedStyle}>\r\n            <div className={\"skillBody col pl-1\" + checkedStyle}>\r\n                <p>\r\n                <input disabled={props.lockChanges} type=\"checkbox\" checked={playerHasSkill(props.playerSkills)} \r\n                \r\n                    onChange={e => {\r\n\r\n                        //(setIsChecked(\r\n                            props.playerCheckedASkillBox(props.skill, e.target.checked)\r\n                        ;\r\n                        //);\r\n                }}/> \r\n                    {' '} {addSpaces(props.skill.name)}\r\n                    {props.skill.name}{needsApproval()}\r\n                </p>\r\n                </div>\r\n            <div className=\"skillCost d-inline-flex flex-nowrap pr-1\">{props.skill.cost}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skill\r\n","import React, { useState } from 'react'\r\nimport { Collapse } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\r\nimport Skill from './Skill';\r\n\r\nexport default function SkillTree(props){\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const numOfSkillsInTree = props.skills.length;\r\n\r\n    // add free languages to skills in tree calculation if the tree is general\r\n    var freeLangsNum = 0;\r\n    if (props.treeName === \"General\"){\r\n        freeLangsNum = props.freeLanguages.length;\r\n    }\r\n\r\n    // search playerskills for matching tree to this props.tree(toLowerCase, since it's used for display without it)\r\n    const numOfPlayerSkillsInTree = () => {\r\n        let playerTreeSkills = props.playerSkills.filter(skill => skill.tree === props.treeName.toLowerCase()).length\r\n        return playerTreeSkills\r\n    }\r\n\r\n    const skills = props.skills.map((skill) => (\r\n            <Skill key={skill.id} skill={skill} playerCheckedASkillBox={props.playerCheckedASkillBox} lockChanges={props.lockChanges} playerSkills={props.playerSkills} freeLanguages={props.freeLanguages} />\r\n        ))\r\n\r\n        // this is where the list of skills in a tree is generated.   \r\n\r\n    return (\r\n        <div>\r\n                <h3><button className=\"btn-sm btn-dark float-left\" onClick={toggle}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button>\r\n\r\n                {props.treeName} {numOfPlayerSkillsInTree() + freeLangsNum} / {numOfSkillsInTree}\r\n\r\n                <button className=\"btn-sm btn-dark float-right\" onClick={toggle}><FontAwesomeIcon icon={isOpen ? faChevronUp : faChevronDown} /></button></h3>\r\n            <Collapse isOpen={isOpen}>\r\n                {skills}\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function RegisterNewUserComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [registerClickable, setRegisterClickable] = useState(true);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Register Account\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        setRegisterClickable(false);\r\n        let url = API_URL + '/register'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n                setRegisterClickable(true);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n                <h1 className=\"text-center\">Register New User</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Registration Successful. A confirmation email has been sent to the provided email address. Please click the activation link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" disabled={!registerClickable} onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Register</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function NewPasswordComponent(props) {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [password, updatePassword] = useState('');\r\n    const [password2, updatePassword2] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n\r\n    useEffect(() => {\r\n        document.title = \"Enter New Password\"\r\n     }, []);\r\n\r\n    const eventUpdatePassword = (event) => updatePassword(event.target.value);\r\n    const eventUpdatePassword2 = (event) => updatePassword2(event.target.value);\r\n\r\n    console.log(props)\r\n\r\n    const requestNewPassword = (password, password2) => {\r\n        let url = API_URL + '/confirm?token=';\r\n        return axios.post(url + props.match.params.token,\r\n            { \"p1\": password,\r\n                \"p2\": password2 })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Enter New Password</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">Password accepted. You may now log in normally. Thank you.</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Password: <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={eventUpdatePassword}/>\r\n\r\n                    Confirm Password: <input type=\"password\" className=\"form-control\" name=\"password2\" value={password2} onChange={eventUpdatePassword2}/>\r\n\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" onClick={(event) => {event.persist(); requestNewPassword(password, password2);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                    <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport default function ForgotPasswordComponent() {\r\n    const API_URL = process.env.REACT_APP_API_DOMAIN\r\n    const APP_URL = process.env.REACT_APP_DOMAIN\r\n\r\n    const [email, updateEmail] = useState('');\r\n    const [hasRegisterFailed, setRegisterFailed] = useState(false);\r\n    const [showSuccessMessage, setSuccessMessage] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [registerClickable, setRegisterClickable] = useState(true);\r\n\r\n    useEffect(() => {\r\n        document.title = \"Forgot Password\"\r\n     }, []);\r\n\r\n    const eventUpdateEmail = (event) => updateEmail(event.target.value);\r\n\r\n    const requestRegisterNewUser = (email) => {\r\n        setRegisterClickable(false);\r\n        let url = API_URL + '/forgot'\r\n        return axios.post(url,\r\n            { \"email\": email })\r\n            .then((res) => {\r\n                console.log(res)\r\n                setSuccessMessage(true)\r\n                setRegisterFailed(false)\r\n            }).catch((err) => {\r\n                setErrorMessage(err.response.data)\r\n                setRegisterFailed(true)\r\n                setRegisterClickable(true);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container form-group d-flex flex-column\">\r\n            <h1 className=\"text-center\">Forgot Password?</h1>\r\n\r\n                    {hasRegisterFailed && <div className=\"alert alert-warning\">{\"Error: \" + errorMessage}</div>}\r\n\r\n                    {showSuccessMessage && <div className=\"alert alert-success text-center\">An email has been sent to the provided email address. Please click the forgot password link in the email to continue</div>}\r\n\r\n                    {!showSuccessMessage &&\r\n                    <>\r\n                    Email: <input type=\"text\" className=\"form-control\" name=\"email\" value={email} onChange={eventUpdateEmail}/>\r\n\r\n                    <button className=\"btn btn-lg btn-success p-1 mt-3 mb-2\" disabled={!registerClickable} onClick={(event) => {event.persist(); requestRegisterNewUser(email);}}>Submit</button>\r\n                    </>\r\n                    }\r\n                <a href={APP_URL} className=\"text-center m-auto w-50 btn btn-secondary\">Back to homepage</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import Download from 'downloadjs';\r\nimport Blob from 'blob';\r\nimport KonCharacterSheet from './ncs_2019.pdf';\r\nimport fontkit from '@pdf-lib/fontkit';\r\n\r\nconst { PDFDocument,\r\n    PDFArray,\r\n    PDFHexString,\r\n    PDFNumber,\r\n    breakTextIntoLines,\r\n    PDFOperator,\r\n    degrees,\r\n    drawLinesOfText,\r\n    PDFOperatorNames: Ops,\r\n    PDFName,\r\n    rgb,\r\n    StandardFonts,\r\n    asPDFName,\r\n    PDFBool,\r\n    PDFContentStream,\r\n    pushGraphicsState,\r\n    popGraphicsState } = require('pdf-lib');\r\n\r\n    const getAcroForm = pdfDoc => {\r\n        return pdfDoc.catalog.lookup(PDFName.of('AcroForm'));\r\n    };\r\n  \r\n  const getAcroFields = pdfDoc => {\r\n    const acroForm = getAcroForm(pdfDoc);\r\n    if (!acroForm) return [];\r\n  \r\n    const fieldRefs = acroForm.lookupMaybe(PDFName.of('Fields'), PDFArray);\r\n    if (!fieldRefs) return [];\r\n  \r\n    const fields = new Array(fieldRefs.size());\r\n    for (let idx = 0, len = fieldRefs.size(); idx < len; idx++) {\r\n      fields[idx] = fieldRefs.lookup(idx);\r\n    }\r\n    return fields;\r\n  };\r\n\r\n  const lockField = acroField => {\r\n    acroField.set(PDFName.of('Ff'), PDFNumber.of(1 << 0 /* Read Only */));\r\n  };\r\n  \r\n  const findAcroFieldByName = (pdfDoc, name) => {\r\n    const acroFields = getAcroFields(pdfDoc);\r\n    return acroFields.find(acroField => {\r\n      const fieldName = acroField.get(PDFName.of('T'));\r\n      return !!fieldName && fieldName.value === name;\r\n    });\r\n  };\r\n  \r\n  const fillAcroTextField = (acroField, text, font, multiline = false) => {\r\n    const rect = acroField.lookup(PDFName.of('Rect'), PDFArray);\r\n    const width =\r\n      rect.lookup(2, PDFNumber).value() - rect.lookup(0, PDFNumber).value();\r\n    const height =\r\n      rect.lookup(3, PDFNumber).value() - rect.lookup(1, PDFNumber).value();\r\n  \r\n    const N = multiline\r\n      ? multiLineAppearanceStream(font, text, width, height)\r\n      : singleLineAppearanceStream(font, text, width, height);\r\n  \r\n    acroField.set(PDFName.of('AP'), acroField.context.obj({ N }));\r\n    acroField.set(PDFName.of('Ff'), PDFNumber.of(1 /* Read Only */));\r\n    acroField.set(PDFName.of('V'), PDFHexString.fromText(text));\r\n  };\r\n  \r\n  const beginMarkedContent = tag =>\r\n    PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\r\n  \r\n  const endMarkedContent = () => PDFOperator.of(Ops.EndMarkedContent);\r\n  \r\n  const singleLineAppearanceStream = (font, text, width, height) => {\r\n    const size = font.sizeAtHeight(height - 5);\r\n    // const lineWidth = font.widthOfTextAtSize(text, fillingSize);\r\n    const lines = [font.encodeText(text)];\r\n    const x = 0;\r\n    const y = height - size;\r\n    return textFieldAppearanceStream(font, size, lines, x, y, width, height);\r\n  };\r\n  \r\n  const multiLineAppearanceStream = (font, text, width, height) => {\r\n    const size = 12;\r\n    // const lineWidth = font.widthOfTextAtSize(text, fillingSize);\r\n    const textWidth = t => font.widthOfTextAtSize(t, size);\r\n    const lines = breakTextIntoLines(text, [' '], width, textWidth).map(line =>\r\n      font.encodeText(line),\r\n    );\r\n    const x = 0;\r\n    const y = height - size;\r\n    return textFieldAppearanceStream(font, size, lines, x, y, width, height);\r\n  };\r\n  \r\n  const textFieldAppearanceStream = (font, size, lines, x, y, width, height) => {\r\n    const dict = font.doc.context.obj({\r\n      Type: 'XObject',\r\n      Subtype: 'Form',\r\n      FormType: 1,\r\n      BBox: [0, 0, width, height],\r\n      Resources: { Font: { F0: font.ref } },\r\n    });\r\n  \r\n    const operators = [\r\n      beginMarkedContent('Tx'),\r\n      pushGraphicsState(),\r\n      ...drawLinesOfText(lines, {\r\n        color: rgb(1, 0, 0),\r\n        font: 'F0',\r\n        size: size,\r\n        rotate: degrees(0),\r\n        xSkew: degrees(0),\r\n        ySkew: degrees(0),\r\n        x: x,\r\n        y: y,\r\n        lineHeight: size + 2,\r\n      }),\r\n      popGraphicsState(),\r\n      endMarkedContent(),\r\n    ];\r\n  \r\n    const stream = PDFContentStream.of(dict, operators);\r\n  \r\n    return font.doc.context.register(stream);\r\n  };\r\n\r\n  \r\n  \r\n  export default async function PrintCharacterSheet(state, savedSkillPoints) {\r\n\r\n    const pdfStream = await fetch(KonCharacterSheet).then(res => res.arrayBuffer())\r\n\r\n    const pdfDoc = await PDFDocument.load(pdfStream)\r\n\r\n    pdfDoc.registerFontkit(fontkit);\r\n    const timesRomanFont = await pdfDoc.embedFont(StandardFonts.TimesRoman);\r\n\r\n    const acroForm = getAcroForm(pdfDoc);\r\n    acroForm.set(PDFName.of('NeedAppearances'), PDFBool.True);\r\n\r\n    const fillInField = (fieldName, text, font, multiline = false) => {\r\n        const field = findAcroFieldByName(pdfDoc, fieldName);\r\n        if (!field) throw new Error(`Missing AcroField: ${fieldName}`);\r\n        fillAcroTextField(field, text, font, multiline);\r\n      };\r\n\r\n    // fill in character info\r\n    fillInField('CharacterName', state.characterName, timesRomanFont);\r\n    fillInField('Race', state.race, timesRomanFont);\r\n    fillInField('Country', state.country, timesRomanFont);\r\n    fillInField('Player', state.player, timesRomanFont);\r\n    fillInField('SavedSkillPoints', savedSkillPoints.toString(), timesRomanFont);\r\n    fillInField('Level', state.level.toString(), timesRomanFont);\r\n    fillInField('SavedXp', state.savedXp.toString(), timesRomanFont);\r\n\r\n    // fill resources\r\n    for (let i = 0; i < state.resources.magicPoints; i++) {\r\n\r\n        let fieldName = (\"Magic Power \" + (i+1))\r\n\r\n        let magicPowerField =\r\n        findAcroFieldByName(pdfDoc, fieldName);\r\n        if (magicPowerField !== undefined) {\r\n            magicPowerField.set(PDFName.of('V'), PDFName.of('Yes'));\r\n            magicPowerField.set(PDFName.of('AS'), PDFName.of('Yes'));\r\n        }\r\n    }\r\n    // craft and production count by 2, so divide i by half\r\n    for (let i = 0; i <= state.resources.craftPoints; i++) {\r\n        let fieldName = ('Craft ' + (i/2))\r\n\r\n        let craftPointField =\r\n        findAcroFieldByName(pdfDoc, fieldName);\r\n        if (craftPointField !== undefined) {\r\n            craftPointField.set(PDFName.of('V'), PDFName.of('Yes'));\r\n            craftPointField.set(PDFName.of('AS'), PDFName.of('Yes'));\r\n        }\r\n    }\r\n\r\n    for (let i = 1; i <= state.resources.productionPoints; i++) {\r\n        let fieldName = ('Production ' + (i/2))\r\n\r\n        let productionPointField =\r\n        findAcroFieldByName(pdfDoc, fieldName);\r\n        if (productionPointField !== undefined) {\r\n            productionPointField.set(PDFName.of('V'), PDFName.of('Yes'));\r\n            productionPointField.set(PDFName.of('AS'), PDFName.of('Yes'));\r\n        }\r\n    }\r\n\r\n    // fill skills\r\n    for (let skill in state.playerHasSkill) {\r\n        let skillBox = findAcroFieldByName(pdfDoc, state.playerHasSkill[skill].name);\r\n        if (skillBox !== undefined) {\r\n            skillBox.set(PDFName.of('V'), PDFName.of('Yes'));\r\n            skillBox.set(PDFName.of('AS'), PDFName.of('Yes'));\r\n        }\r\n    }\r\n\r\n    // fill free languages\r\n    for (let skill in state.freeLanguages) {\r\n        let skillBox = findAcroFieldByName(pdfDoc, state.freeLanguages[skill].name);\r\n        if (skillBox !== undefined) {\r\n            skillBox.set(PDFName.of('V'), PDFName.of('Yes'));\r\n            skillBox.set(PDFName.of('AS'), PDFName.of('Yes'));\r\n        }\r\n    }\r\n\r\n    // Now make all the fields read-only\r\n    const acroFields = getAcroFields(pdfDoc);\r\n    acroFields.forEach(field => lockField(field));\r\n    \r\n    const pdfBytes = await pdfDoc.save();\r\n    \r\n    const blob = new Blob([pdfBytes], {type: \"application/pdf\"})\r\n\r\n    var today = new Date();\r\n    var dd = String(today.getDate()).padStart(2, '0');\r\n    var mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    var yyyy = today.getFullYear();\r\n\r\n    // Trigger the browser to download the PDF document\r\n    Download(blob, \"\" + state.characterName + \" \" + mm + \"-\" + dd + \"-\" + yyyy + \".pdf\")\r\n};","import React from 'react';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Header from './site_layout/header/Header';\r\nimport CharacterInfo from './site_layout/character_info/CharacterInfo';\r\nimport CharacterBio from './site_layout/character_bio/CharacterBio';\r\nimport Resources from './site_layout/resources/Resources';\r\nimport SkillTree from './site_layout/skill_trees/SkillTree';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport defaultAvatar from './site_layout/character_bio/default.png'\r\n\r\nimport RegisterNewUserComponent from './site_layout/user_management/components/RegisterNewUserComponent';\r\nimport NewPasswordComponent from './site_layout/user_management/components/NewPasswordComponent';\r\nimport ForgotPasswordComponent from './site_layout/user_management/components/ForgotPasswordComponent';\r\nimport AuthenticationService from './site_layout/user_management/services/AuthenticationService';\r\nimport PrintCharacterSheet from './site_layout/character_sheet/PrintCharacterSheet';\r\n\r\nimport { withAlert } from 'react-alert';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        // TOP LEVEL REACT STATE:::\r\n        \r\n        // All of our character information is stored in state. It is overwritten with a localstorage character (if any),\r\n        // or a Database character when selected by the logged in user\r\n        \r\n        // All of a logged in user's characters are stored in characterList\r\n        \r\n        // All of our skills are loaded into skilltree arrays, and player skills are loaded into the playerHasSkill array\r\n        \r\n        // The switch for enabling/disabling skills is also stored here\r\n\r\n        // character info\r\n        id: \"\",\r\n        characterName: \"\",\r\n        country: \"\",\r\n        player: \"\",\r\n        race: \"\",\r\n        level: 0,\r\n        savedXp: 0,\r\n\r\n        // languages a character has for free (to be stored/retrieved from a relational table)\r\n        freeLanguages: [],\r\n\r\n        // character's owned skills\r\n        playerHasSkill: [],\r\n\r\n        // list of characters owned by logged in user\r\n        characterList: [],\r\n\r\n        // list of Races\r\n        races: [],\r\n\r\n        // list of Countries\r\n        countries: [],\r\n        \r\n        // RESOURCES\r\n        resources: {\r\n            magicPoints: 0,\r\n            craftPoints: 0,\r\n            productionPoints: 0,\r\n        },\r\n\r\n        // Cost is tracked in state instead of database using these constant values\r\n            MAGIC_POINT_COST: 1,\r\n        \r\n            // Costs 1 point to get 2 Skill points\r\n            CRAFT_POINT_COST: 0.5,\r\n            PRODUCTION_POINT_COST: 0.5,\r\n        \r\n        // LOCK BUTTONS TO PREVENT EDITING\r\n        locked: false,\r\n\r\n        // SKILLS BEING LOADED?\r\n        loadingSkills: false,\r\n\r\n        // SKILL TREES\r\n        combat: [],\r\n        general: [],\r\n        production: [],\r\n        crafting: [],\r\n        roleplaying: [],\r\n        scholar: [],\r\n        specialaccess: [],\r\n        aegis: [],\r\n        battle: [],\r\n        nature: [],\r\n        necromancy: [],\r\n        compulsion: [],\r\n        restoration: [],\r\n        enchantment: [],\r\n\r\n        // CHARACTER BIO PICTURE LINK\r\n        characterPicture: defaultAvatar,\r\n\r\n        characterBio: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.title = \"Kingdoms of Novitas | Character Sheet\"\r\n        // componentDidMount is called when react successfully inserts a component into the DOM. \r\n        // We then check if the user is logged in to load their characters\r\n        // Then we load all of our tables from the database\r\n        // Then we load whatever the user had in localStorage, if anything\r\n\r\n        if (AuthenticationService.isUserLoggedIn()) {\r\n            AuthenticationService.setupAxiosInterceptors(localStorage.getItem(\"USER_TOKEN\"));\r\n            this.loadCharacterList(this.props.alert);\r\n        };\r\n\r\n        // loading skills flag for 'loading...' div\r\n        this.setState({loadingSkills: true});\r\n\r\n        let skills = [];\r\n        axios.get(process.env.REACT_APP_API_DOMAIN + '/skills')\r\n            .then(res => {\r\n                // an array of skill objects was obtained from the database\r\n                skills = [...res.data];\r\n                // sort them\r\n                this.sortSkillsByTree(skills);\r\n                this.setState(({loadingSkills: false}), function () {\r\n                    this.checkCharacterFreeLanguages();\r\n                })\r\n                });\r\n\r\n        let countries = [];\r\n        axios.get(process.env.REACT_APP_API_DOMAIN + '/countries')\r\n            .then(res => {\r\n                // country list obtained\r\n                countries = [...res.data];\r\n                this.setState({countries: countries});\r\n\r\n                });\r\n\r\n        let races = [];\r\n        axios.get(process.env.REACT_APP_API_DOMAIN + '/races')\r\n            .then(res => {\r\n                // race list obtained\r\n                races = [...res.data];\r\n\r\n                this.setState(({races: races}), function () {\r\n                    this.checkCharacterFreeLanguages();\r\n                    });\r\n                \r\n                });\r\n\r\n        if (localStorage.getItem(\"character\") !== null){\r\n            this.loadLocalCharacter()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Called when state or props update, so we use it to update the localStorage character\r\n        this.saveLocalCharacter()\r\n    }\r\n\r\n    sortSkillsByTree = (skills) => {\r\n        // Called in componentDidUpdate. Called when we get skills from database\r\n\r\n        // keys in state currently empty arrays\r\n        for (let key in this.state) {\r\n            for (let skill in skills) {\r\n                // if state key is the same as skill tree\r\n                if (key === skills[skill].tree) {\r\n                    // state is immutable, and batches updates. We spread the previous state (prevState) and then add the skill so that the correct previous value + new value is added\r\n                    this.setState(prevState => ({\r\n                        [key]: [...prevState[key], skills[skill]]\r\n                    }));\r\n                }\r\n            }\r\n        } \r\n    };\r\n\r\n    saveLocalCharacter = () => {\r\n        // called by componentDidUpdate\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill,\r\n            // bio info\r\n            characterPicture: values.characterPicture,\r\n            characterBio: values.characterBio\r\n        }\r\n\r\n        localStorage.setItem(\"character\", JSON.stringify(character))\r\n    }\r\n\r\n    loadLocalCharacter = () => {\r\n        // CALLED BY: componentDidMount\r\n        // load character from localStorage, if any\r\n\r\n        var localStorageCharacter = JSON.parse(localStorage.getItem(\"character\"));\r\n\r\n        let resources = {\r\n            magicPoints: localStorageCharacter.magicPoints,\r\n            craftPoints: localStorageCharacter.craftPoints,\r\n            productionPoints: localStorageCharacter.productionPoints\r\n\r\n        }\r\n        \r\n        this.setState(prevState =>({\r\n            ...prevState,\r\n            \r\n            characterName: localStorageCharacter.characterName,\r\n            player: localStorageCharacter.player,\r\n            race: localStorageCharacter.race,\r\n            country: localStorageCharacter.country,\r\n            level: localStorageCharacter.level,\r\n            savedXp: localStorageCharacter.savedXp,\r\n            resources: resources,\r\n            playerHasSkill: localStorageCharacter.skills,\r\n            // bio info\r\n            characterPicture: localStorageCharacter.characterPicture,\r\n            characterBio: localStorageCharacter.characterBio\r\n        }))\r\n    }\r\n    \r\n    loadCharacterList = (alert) => {\r\n        // CALLED BY: componentDidMount, saveCharacter, loadCharacter,\r\n                    // loginClicked (Header -> Navigation -> LoginComponent)\r\n        // load all characters owned by current user\r\n\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/characters'\r\n        return axios({\r\n            method: 'get',\r\n            url: url})\r\n            .then((res) => {\r\n                this.setState(() =>({\r\n                    characterList: [...res.data]\r\n                }))\r\n                \r\n            })\r\n            .catch((err) => {\r\n                //console.log(err.response.data)\r\n                alert.show(\"Error loading character list.\\n\" + err.response.data.status + \" \" + err.response.data.message, {timeout: 5000, type: 'error'})\r\n            })\r\n        }\r\n    \r\n        \r\n        saveCharacter = (id, alert) => {\r\n            // CALLED BY: Navigation(onClick(new Character)) (Header -> Navigation) \r\n            // CALLED BY: ConfirmationModal(onClick) (Header -> Navigation -> ConfirmationModal)\r\n            // Save character to database. If an ID is provided, it will overwrite the database character with the matching ID\r\n            // Ownership of the character is checked on the backend, so the user cannot overwrite a character that does not\r\n            // belong to them\r\n        \r\n            // alert is passed in, because App.js this.props.alert is not accessible.\r\n\r\n        let values = this.state\r\n\r\n        let character = {\r\n            id: id,\r\n            characterName: values.characterName,\r\n            player: values.player,\r\n            race: values.race,\r\n            country: values.country,\r\n            level: values.level,\r\n            savedXp: values.savedXp,\r\n            magicPoints: values.resources.magicPoints,\r\n            craftPoints: values.resources.craftPoints,\r\n            productionPoints: values.resources.productionPoints,\r\n            skills: values.playerHasSkill,\r\n            // bio info\r\n            characterPicture: values.characterPicture,\r\n            characterBio: values.characterBio\r\n        }\r\n\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'post',\r\n            url: url,\r\n            data: character })\r\n            .then((res) => {\r\n                \r\n                // reload the character list on success\r\n                this.loadCharacterList(alert);\r\n\r\n                // alert arg use\r\n                alert.show(\"Character Saved\", {timeout: 5000, type: 'success'})\r\n            }).catch((err) => {\r\n\r\n                // console.log(err.response.data)\r\n                alert.show(\"Error saving character. \\n\" + err.response.data.status + \" \" + err.response.data.message, {timeout: 5000, type: 'error'})\r\n            })\r\n        \r\n    }\r\n    \r\n    loadCharacter = (id, alert) => {\r\n        // load a user selected character from the database\r\n        \r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'get',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // react doesnt like nested state, so we need to make a nest for our resources first\r\n                // due to the way we stored them in this.state\r\n                var resources = {magicPoints: res.data.magicPoints,\r\n                                    productionPoints: res.data.productionPoints,\r\n                                craftPoints: res.data.craftPoints}\r\n\r\n                this.setState(prevState =>({\r\n                    ...prevState,\r\n\r\n                    id : res.data.id,\r\n                    characterName: res.data.characterName,\r\n                    race: res.data.race,\r\n                    player: res.data.player,\r\n                    country: res.data.country,\r\n                    level: res.data.level,\r\n                    savedXp: res.data.savedXp,\r\n\r\n                    // resource nest made above\r\n                    resources: resources,\r\n\r\n                    // list of user skills\r\n                    playerHasSkill: res.data.skills,\r\n\r\n                    // bio info\r\n                    characterPicture: res.data.characterPicture,\r\n                    characterBio: res.data.characterBio\r\n\r\n                }), function () {\r\n                    this.checkCharacterFreeLanguages();\r\n                })\r\n                alert.show(\"Character Loaded\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(\"Error loading character. \\n\" + err.response.data.status + \" \" + err.response.data.message, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    deleteCharacter = (id, alert) => {\r\n        let url = process.env.REACT_APP_API_DOMAIN + '/character'\r\n        return axios({\r\n            method: 'delete',\r\n            url: url,\r\n            params: {\"id\":id}})\r\n            .then((res) => {\r\n                // console.log(res.data)\r\n                this.loadCharacterList(alert)\r\n                alert.show(\"Character Deleted\", {timeout: 5000, type: 'success'})\r\n            })\r\n            .catch((err) => {\r\n                // console.log(err.response.data)\r\n                alert.show(\"Error deleting character. \\n\" + err.response.data.status + \" \" + err.response.data.message, {timeout: 5000, type: 'error'})\r\n            })\r\n\r\n    }\r\n\r\n    resetSkills = () => {\r\n        let resetResources = {\r\n            magicPoints: 0,\r\n            craftPoints: 0,\r\n            productionPoints: 0 }\r\n            \r\n        this.setState({ playerHasSkill: [],\r\n                        resources: resetResources\r\n                    });\r\n        this.calculateSkillPointsRemaining();\r\n        this.props.alert.show(\"Character Reset\", {timeout: 5000, type: 'success'})\r\n    }\r\n\r\n    characterInfoChange = (infoName, updatedInfo) => {\r\n        // CALLED BY:\r\n        // CharacterInfo -> CharacterInfoInput(onChange)\r\n        // if the infoName is \"level\", we need to update players skill points remaining.\r\n        this.setState({[infoName]: updatedInfo}, function() {\r\n            this.calculateSkillPointsRemaining();\r\n            this.checkCharacterFreeLanguages();\r\n        });  \r\n    }\r\n\r\n    checkCharacterFreeLanguages = () => {\r\n        let playerSkills = this.state.playerHasSkill;\r\n        let generalSkills = this.state.general\r\n\r\n        switch (this.state.race) {\r\n            case \"Human\":\r\n                this.addFreeLanguages([\"\"]);\r\n                break;\r\n            case \"Drake\":\r\n                this.addFreeLanguages([\"Language: Draconian\"]);\r\n                break;\r\n            case \"Snow Goblin\":\r\n                this.addFreeLanguages([\"Language: Snow Goblin\"]);\r\n                break;\r\n            case \"Elf\":\r\n                this.addFreeLanguages([\"Language: Elven\"]);\r\n                break;\r\n            case \"Earthkin\":\r\n                this.addFreeLanguages([\"Language: Terran\"]);\r\n                break;\r\n            case \"Faekin Elf\":\r\n                this.addFreeLanguages([\"Language: Elven\", \"Language: Sylvan\"]);\r\n                break;\r\n            case \"Faekin Earthkin\":\r\n                this.addFreeLanguages([\"Language: Terran\", \"Language: Sylvan\"]);\r\n                break;\r\n            case \"Faekin Human\":\r\n                this.addFreeLanguages([\"Language: Sylvan\"]);\r\n                break;\r\n        }\r\n    }\r\n\r\n    addFreeLanguages = (languageNamesArray) => {\r\n        // grant free language skills based on race to character\r\n        let hasFreeLanguages = [];\r\n        let generalSkills = this.state.general\r\n\r\n        for (let languageName in languageNamesArray) {\r\n                let getLanguageByName = generalSkills.find(skill => skill.name === languageNamesArray[languageName])\r\n                \r\n                if (getLanguageByName !== undefined) {\r\n                    hasFreeLanguages.push(getLanguageByName);\r\n                }\r\n        }\r\n\r\n\r\n        this.setState(prevState => ({\r\n            freeLanguages: hasFreeLanguages }), function() {\r\n                for (let lang in hasFreeLanguages) {\r\n                    this.removeSkill(hasFreeLanguages[lang]);\r\n                }\r\n        });  \r\n    }\r\n    \r\n    calculateBaseSkillPoints = () => { \r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // a level 0 character has 10 skill points. Every level after that is +2\r\n\r\n        return this.state.level === 0 ? 10 : (this.state.level * 2) + 10\r\n    }\r\n\r\n\r\n    calculateSkillPointsRemaining = () => {\r\n        // used anytime our skill points need to be updated or checked\r\n\r\n        var newSkillPointsRemaining = this.calculateBaseSkillPoints();\r\n\r\n        newSkillPointsRemaining -= this.calculateSpentSkillPoints();\r\n\r\n        return newSkillPointsRemaining;\r\n    }\r\n\r\n    calculateSpentSkillPoints = () => {\r\n        // CALLED BY: calculateSkillPointsRemaining\r\n        // this function is used to determine the total accumulated cost of the characters skills + resources\r\n        var spent = 0;\r\n        var playerSkills = this.state.playerHasSkill;\r\n        var playerResources = this.state.resources;\r\n\r\n        for (let skill in playerSkills) {\r\n            spent += playerSkills[skill].cost;\r\n        }\r\n\r\n        spent += (playerResources.craftPoints * this.state.CRAFT_POINT_COST) + \r\n                (playerResources.productionPoints * this.state.PRODUCTION_POINT_COST) + \r\n                (playerResources.magicPoints * this.state.MAGIC_POINT_COST);\r\n\r\n        return spent;\r\n    }\r\n\r\n    checkRequirements = (skill) => {\r\n        // return true if player meets requirements for skill\r\n    \r\n        // skill.requires is a string that is equal to anotherSkill.name required for skill\r\n        let requiredSkill = skill.requires\r\n\r\n        // skill does not have a required skill\r\n        if (requiredSkill === \"\" || requiredSkill === null) {\r\n            //console.log(\"no required skill found (requiredSkill === \" + requiredSkill + \")\");\r\n            return true; \r\n        }\r\n\r\n        // player's skills array\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n            // if one of the player's skill contains the required skill name\r\n            if (requiredSkill.includes(pSkills[pSkill].name)) {\r\n                //console.log(\"required skill string includes: \" + pSkills[pSkill].name);\r\n                // we're good\r\n                return true;\r\n            }\r\n        }\r\n        //console.log(\"checkRequirements returned false\")\r\n        return false;\r\n    }\r\n    \r\n    playerCheckedASkillBox = (checkedSkill, e) => {\r\n        \r\n        // CALLED BY Skill.js(checkBox onChange) (SkillTree.js -> Skill.js)\r\n\r\n        // add or remove a skill on checkbox change\r\n            // make sure enough skill points are available\r\n            // make sure requirements are met?\r\n            // add skill to playerHasSkill Array, or remove it\r\n\r\n        if (!this.checkRequirements(checkedSkill)) {\r\n            // console.log(\"You do not meet the requirements for \" + checkedSkill.name)\r\n            this.props.alert.show(\"You do not meet the requirements for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n            return false;\r\n        };\r\n \r\n        // if adding a checkbox was detected\r\n        if (e) {\r\n\r\n            // check the cost        \r\n            if (this.calculateSkillPointsRemaining() - checkedSkill.cost < 0) {\r\n                // console.log(\"You do not have enough skill points for \" + checkedSkill.name);\r\n                this.props.alert.show(\"You do not have enough skill points for \" + checkedSkill.name, {timeout: 5000, type: 'error'})\r\n                return false;\r\n            };\r\n\r\n            // roleplaying skill rules\r\n            if (checkedSkill.tree === \"roleplaying\") {\r\n                if (!this.canPlayerGetThisRoleplayingSkill(checkedSkill)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            //check if it's a spell, and the player has at least one point of magic\r\n            if (checkedSkill.tree === \"aegis\" ||\r\n            checkedSkill.tree === \"enchantment\" ||\r\n            checkedSkill.tree === \"necromancy\" ||\r\n            checkedSkill.tree === \"restoration\" ||\r\n            checkedSkill.tree === \"compulsion\" ||\r\n            checkedSkill.tree === \"battle\" ||\r\n            checkedSkill.tree === \"nature\"){\r\n                if (!this.doesPlayerHaveMagicPower()) {\r\n                    this.props.alert.show(\"You must have a point in Magic Power before learning spells\", {timeout: 5000, type: 'error'})\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            // warn if skill needs approval\r\n            if (checkedSkill.needsApproval === 1) {\r\n                this.props.alert.show(\"Asterisked skills will require Plot Marshal approval\", {timeout: 5000, type: 'info'})\r\n            }\r\n\r\n            // add skill\r\n            return this.addSkill(checkedSkill);\r\n            \r\n        } else {\r\n\r\n            // if the skill is required, don't remove it\r\n            if (this.skillIsRequired(checkedSkill)) {\r\n                return true;\r\n            }\r\n\r\n            // remove\r\n            return this.removeSkill(checkedSkill);\r\n        }\r\n    }\r\n\r\n    doesPlayerHaveMagicPower=()=>{\r\n        return this.state.resources.magicPoints > 0;\r\n    }\r\n\r\n    doesPlayerHaveAnySpells=()=>{\r\n        for (let skill in this.state.playerHasSkill) {\r\n            let tree = this.state.playerHasSkill[skill].tree\r\n            if (tree === \"aegis\" ||\r\n            tree === \"enchantment\" ||\r\n            tree === \"necromancy\" ||\r\n            tree === \"restoration\" ||\r\n            tree === \"compulsion\" ||\r\n            tree === \"battle\" ||\r\n            tree === \"nature\") {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    canPlayerGetThisRoleplayingSkill = (skill) => {\r\n    // A Character can only have 5 levels in one roleplaying skill tree,\r\n    // And 2 levels in another maximum\r\n\r\n        // filter for player RP skills\r\n        let playerRPSkills = this.state.playerHasSkill.filter(skill => skill.tree === \"roleplaying\");\r\n\r\n        // filter for tier one skills\r\n        let tierOnePlayerRPSkills = playerRPSkills.filter(skill => skill.name.includes(\"1\"))\r\n\r\n        // if the player has two tier ones already, he is inelligible for another tier one\r\n        if (tierOnePlayerRPSkills.length === 2) {\r\n            if (skill.name.includes(\"1\")) {\r\n                this.props.alert.show(\"You cannot have more than two types of roleplaying skills\", {timeout: 5000, type: 'error'})\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // filter for tier three skills\r\n        let tierThreePlayerRPSkills = playerRPSkills.filter(skill => skill.name.includes(3))\r\n\r\n        // if player has any\r\n        if (tierThreePlayerRPSkills.length !== 0) {\r\n\r\n            // if player has one already, inelligible for another\r\n            if (skill.name.includes(3) && tierThreePlayerRPSkills.length === 1) {\r\n                this.props.alert.show(\"You cannot have more than one roleplaying skill above 2nd level\", {timeout: 5000, type: 'error'})\r\n                return false;\r\n            }\r\n\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    skillIsRequired = (skill) => {\r\n        // don't allow player to remove a skillpoint if it's a necessary requirement for another skill the player has\r\n\r\n        // THIS FUNCTION IS ATROCIOUS\r\n\r\n        let pSkills = this.state.playerHasSkill;\r\n\r\n        for (let pSkill in pSkills) {\r\n\r\n            // current iterations required skills\r\n            let requirementSkillString = pSkills[pSkill].requires\r\n\r\n            // if the current playerskill has a prerequisite skill\r\n            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                // if it includes the skill we are trying to remove, [and it's in the same tree], it's a requirement\r\n                if (requirementSkillString.includes(skill.name) && pSkills[pSkill].tree === skill.tree) {\r\n\r\n                    // if it includes a pipe, there's another prerequisite\r\n                    if(requirementSkillString.includes(\"|\")) {\r\n\r\n                        // iterate again\r\n                        for (let pSkill2 in pSkills) {\r\n\r\n                            // if the current playerskill has a prerequisite skill\r\n                            if (requirementSkillString !== \"\" && requirementSkillString !== null) {\r\n\r\n                                // if the NEW FOUND SKILL is required by the FIRST FOUND SKILL\r\n                                // but it does not equal the SKILL BEING REMOVED\r\n                                // the player still meets the requirements\r\n                                // (this took me way too long and it seems overcomplicated)\r\n                                if (skill.name !== pSkills[pSkill2].name && requirementSkillString.includes(pSkills[pSkill2].name)  && pSkills[pSkill2].tree === skill.tree) {\r\n                                    //console.log(skill.name + \" is a prerequisite for \" + pSkills[pSkill].name + \", but player has \" + pSkills[pSkill2].name + \", which is also a prerequisite\")\r\n                                    return false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                        // console.log(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name)\r\n                        this.props.alert.show(\"Cannot remove \" + skill.name + \". It is a prerequisite for \" + pSkills[pSkill].name, {timeout: 5000, type: 'error'})\r\n                        return true;    \r\n                }\r\n            }\r\n\r\n        }\r\n        return false;\r\n    }\r\n\r\n    addResource = (resourceName, cost, max) => {\r\n        // CALLED BY: Resources.js -> Resource.js(onClick)\r\n\r\n        if (this.calculateSkillPointsRemaining() - cost < 0) {\r\n            this.props.alert.show(\"You do not have enough skill points\", {type:'error'});\r\n            return false;\r\n        };\r\n\r\n        // check if player maxed out resource amount already\r\n        if (this.state.resources[resourceName] >= max) {\r\n                // console.log(resourceName + \" limit reached\")\r\n                return false;\r\n        };\r\n\r\n        // local resources variable\r\n        let resources = this.state.resources\r\n        \r\n        // add to this resource\r\n        // hard coded rule to give non magic points +2 per skill\r\n        if (resourceName===\"magicPoints\"){\r\n            resources[resourceName] += 1;\r\n        } else {\r\n            resources[resourceName] += 2;\r\n        }\r\n\r\n        // add new resources to state and calc SPR\r\n        this.setState({resources}, () => {this.calculateSkillPointsRemaining()});\r\n\r\n        return true;\r\n    }\r\n\r\n    removeResource = (resourceName) => {\r\n         // CALLED BY: Resources.js -> Resource.js(onClick)\r\n        \r\n        let resources = this.state.resources\r\n         \r\n        if (resources[resourceName] === 0) {\r\n            // console.log(\"you can't go below 0, you idiot\")\r\n            return false;\r\n        }\r\n\r\n        if (resourceName === \"magicPoints\") {\r\n            if (resources[resourceName] === 1) {\r\n                if (this.doesPlayerHaveAnySpells()) {\r\n                    this.props.alert.show(\"Cannot have 0 Magic Power while knowing spells\", {timeout: 5000, type: 'error'})\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        \r\n        // hard coded rule to give non magic points +2 per skill\r\n        if (resourceName===\"magicPoints\"){\r\n            resources[resourceName] -= 1;\r\n        } else {\r\n            resources[resourceName] -= 2;\r\n        }\r\n\r\n        this.setState({resources});\r\n    }\r\n\r\n    addSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            playerHasSkill: ([...prevState.playerHasSkill, skill]) }), function ()   {\r\n                this.calculateSkillPointsRemaining()\r\n        });\r\n        // console.log(\"You have added the \" + skill.name + \" skill\")\r\n        return true;\r\n        }\r\n   \r\n    removeSkill = (skill) => {\r\n        // called by playerCheckedASkillBox\r\n\r\n        this.setState(prevState => ({\r\n            // filter previous state.playerhasskill array to return a new array without matching skill\r\n            playerHasSkill: prevState.playerHasSkill.filter(arrSkill => arrSkill.name !== skill.name)\r\n        }), function () {\r\n            this.calculateSkillPointsRemaining()\r\n        })\r\n\r\n        // console.log(\"You have removed the \" + skill.name + \" skill\")\r\n        return false;\r\n    }\r\n\r\n\r\n    lockChanges = () => {\r\n        // disable inputs on playerInfo, resources, and skill checkboxes\r\n        \r\n        this.props.alert.show(\"Character editing \" + (this.state.locked ? \"unl\" : \"l\") + \"ocked\")\r\n\r\n        this.setState(prevState => ({locked: !prevState.locked}));\r\n\r\n        this.calculateSkillPointsRemaining();\r\n    }\r\n\r\n    printCharacterSheet = () => {\r\n        PrintCharacterSheet(this.state, this.calculateSkillPointsRemaining())\r\n    }\r\n\r\n    printCharacterSheetDisabled = () => {\r\n        this.props.alert.show(\"Sorry! Download PDF is currently disabled for updating\", {timeout: 5000, type: 'error'})\r\n    }\r\n\r\n    changeCharacterPicture = (URL) => {\r\n        this.setState({characterPicture: URL})\r\n    }\r\n\r\n    changeCharacterBio = (text) => {\r\n        this.setState({characterBio: text})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n\r\n                            <Header \r\n                                lockChanges={this.lockChanges}\r\n                                resetSkills={this.resetSkills}\r\n                                locked={this.state.locked} \r\n                                saveCharacter={this.saveCharacter} \r\n                                loadCharacter={this.loadCharacter} \r\n                                deleteCharacter={this.deleteCharacter} \r\n                                characterList={this.state.characterList} \r\n                                loadCharacterList={this.loadCharacterList}\r\n                                printCharacterSheet={this.printCharacterSheetDisabled}\r\n                                // pass state to a button for testing\r\n                                staate={this.state} >\r\n                            </Header>\r\n\r\n                            <CharacterInfo\r\n                                races={this.state.races}\r\n                                countries={this.state.countries}\r\n                                level={this.state.level}\r\n                                characterName={this.state.characterName}\r\n                                country={this.state.country}\r\n                                player={this.state.player}\r\n                                race={this.state.race}\r\n                                savedXp={this.state.savedXp}\r\n                                characterInfoChange={this.characterInfoChange}\r\n                                lockChanges={this.state.locked}\r\n                                calculateSkillPointsRemaining={this.calculateSkillPointsRemaining}\r\n                            />\r\n\r\n                            <CharacterBio \r\n                                characterPicture={this.state.characterPicture}\r\n                                characterBio={this.state.characterBio}\r\n                                changeCharacterPicture={this.changeCharacterPicture}\r\n                                changeCharacterBio={this.changeCharacterBio}\r\n                                lockChanges={this.state.locked}\r\n                            />\r\n\r\n                            <Container>\r\n                                {this.state.loadingSkills ? <div>Loading skills. Please wait...</div> : <>\r\n                                \r\n                                <Resources \r\n                                    resources={this.state.resources}\r\n                                    addResource={this.addResource} \r\n                                    removeResource={this.removeResource} \r\n                                    lockChanges={this.state.locked} \r\n                                    MAGIC_POINT_COST={this.state.MAGIC_POINT_COST}\r\n                                    PRODUCTION_POINT_COST={this.state.PRODUCTION_POINT_COST}\r\n                                    CRAFT_POINT_COST={this.state.CRAFT_POINT_COST}\r\n                                />\r\n                                \r\n                                <Row>\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"combat\">\r\n                                            <SkillTree \r\n                                                treeName=\"Combat\"\r\n                                                skills={this.state.combat} \r\n                                                playerSkills={this.state.playerHasSkill}\r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} \r\n                                            />\r\n                                        </div>\r\n\r\n                                        <div className=\"general\">\r\n                                            <SkillTree \r\n                                                treeName=\"General\"\r\n                                                skills={this.state.general} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"nature\">\r\n                                            <SkillTree \r\n                                                treeName=\"Nature\"\r\n                                                skills={this.state.nature} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        <div className=\"necromancy\">\r\n                                            <SkillTree \r\n                                                treeName=\"Necromancy\"\r\n                                                skills={this.state.necromancy} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"compulsion\">\r\n                                            <SkillTree \r\n                                                treeName=\"Compulsion\"\r\n                                                skills={this.state.compulsion} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"production\">\r\n                                                <SkillTree \r\n                                                treeName=\"Production\"\r\n                                                skills={this.state.production} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        {/* class production for text CSS */}\r\n                                        <div className=\"production\">\r\n                                                <SkillTree \r\n                                                treeName=\"Crafting\"\r\n                                                skills={this.state.crafting} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"aegis\">\r\n                                                <SkillTree \r\n                                                treeName=\"Aegis\"\r\n                                                skills={this.state.aegis} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"battle\">\r\n                                            <SkillTree \r\n                                                treeName=\"Battle\"\r\n                                                skills={this.state.battle} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"enchantment\">\r\n                                            <SkillTree \r\n                                                treeName=\"Enchantment\"\r\n                                                skills={this.state.enchantment} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                    <Col className=\"skilltree\">\r\n\r\n                                        <div className=\"roleplaying\">\r\n                                            <SkillTree \r\n                                                treeName=\"Roleplaying\"\r\n                                                skills={this.state.roleplaying} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"roleplaying\">\r\n                                            <SkillTree \r\n                                                treeName=\"Scholar\"\r\n                                                skills={this.state.scholar} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n\r\n                                        <div className=\"roleplaying\">\r\n                                            <SkillTree \r\n                                                treeName=\"Special Access Skills\"\r\n                                                skills={this.state.specialaccess} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                    \r\n                                        <div className=\"restoration\">\r\n                                            <SkillTree \r\n                                                treeName=\"Restoration\"\r\n                                                skills={this.state.restoration} \r\n                                                playerSkills={this.state.playerHasSkill} \r\n                                                freeLanguages={this.state.freeLanguages}\r\n                                                playerCheckedASkillBox={this.playerCheckedASkillBox} \r\n                                                lockChanges={this.state.locked} />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row> </>\r\n                                }\r\n\r\n                            </Container>\r\n                        </Route>\r\n\r\n                        <Route path=\"/register\" exact component={RegisterNewUserComponent} />\r\n\r\n                        <Route path=\"/forgot\" exact component={ForgotPasswordComponent} />\r\n                        {/* :token in path creates a string prop equal to all characters after /newpass called token */}\r\n                        <Route path=\"/newpass:token\" exact component={NewPasswordComponent} /> \r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withAlert()(App);\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport React from 'react';\r\nimport {render} from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { transitions, positions, Provider as AlertProvider } from 'react-alert'\r\nimport AlertTemplate from './react-alert-template-basic'\r\n\r\n// optional cofiguration\r\nconst options = {\r\n    // you can also just use 'bottom center'\r\n    position: positions.TOP_CENTER,\r\n    timeout: 3000,\r\n    offset: '30px',\r\n    // you can also just use 'scale'\r\n    transition: transitions.FADE\r\n  }\r\n  \r\nconst Root = () => (\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n        <App />\r\n    </AlertProvider>\r\n)\r\n\r\nrender(<Root />, document.getElementById('root'));\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/default.79216e9e.png\";"],"sourceRoot":""}